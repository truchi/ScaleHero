{"version":3,"sources":["components/Grid/styles.module.scss","components/Instrument/styles.module.scss","registerServiceWorker.js","polyfills.js","lib/grid/utils/MergeIterator.js","lib/grid/utils/group.js","components/Player/Audio/index.js","components/Player/index.js","components/Grid/index.js","components/Instrument/index.js","lib/utils/denormalize/index.js","lib/mask/index.js","lib/music/base.js","lib/music/Note.js","lib/music/Interval.js","lib/music/Scale.js","components/InstrumentList/toArray.js","components/InstrumentList/index.js","components/App.js","lib/grid/utils/Tree.js","lib/grid/utils/ArrayIterator.js","lib/grid/utils/GroupsIterator.js","lib/grid/utils/GroupIterator.js","lib/grid/index.js","store/reducer.js","lib/clip/index.js","lib/textures/index.js","store/data.js","store/index.js","index.js"],"names":["module","exports","grid","section","line","bar","chord","chords","name","duration","guitar","piano","open","boxes","layer","string","box","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","fromEntries","reduce","o","_ref","_ref2","Object","slicedToArray","key","val","merge","defineProperty","__D","_len","arguments","length","args","Array","_key","arg","_console","apply","concat","slice","initialAccumulator","get","is","Audio","src","_ref$$audio","$audio","useRef","_ref$$volume","$volume","_ref$play","play","_ref$loop","loop","_ref$volume","volume","_ref$onPlay","onPlay","_ref$onPause","onPause","_ref$onRestart","onRestart","_ref$onStop","onStop","_ref$onLoop","onLoop","_ref$onUnloop","onUnloop","_ref$onVolume","onVolume","_useState","useState","_useState2","_play","setPlay","_useState3","_useState4","_loop","setLoop","_useState5","_useState6","_volume","setVolume","_useState7","_useState8","_stopped","setStopped","__pause","current","pause","__restart","currentTime","handlePlay","cb","e","handlePause","handleRestart","handleStop","handleLoop","handleUnloop","handleVolume","v","undefined","target","value","handleEnd","useEffect","$","addEventListener","removeEventListener","react_default","a","createElement","Fragment","ref","onClick","type","min","max","step","onChange","connect","bpm","_state$next","next","time","done","objectSpread","onTime","id","_onStop","useCallback","parseFloat","isNaN","raf","requestAnimationFrame","cancelAnimationFrame","index","addIndex","highlight","ind","i","Repeat","repeats","count","c","repeat","find","endIndex","getCount","_ref3","_ref3$grid","sections","_ref3$index","_ref3$index$index","className","styles","map","_ref4","s","lines","Grid_Repeat","l","bars","_ref5","b","items","start","end","_ref6","style","flexGrow","Instrument","layers","join","strings","_ref2$clips","clips","_ref2$style","clipPath","denormalizeValue","data","denormalizeArray","denormalizeObject","m","compose","fn","mapObjIndexed","insidePairs","any","and","zipWith","call","gte","lte","insidePair","inside","j","mask","_ref$offsetI","offsetI","_ref$offsetJ","offsetJ","defaultTo","prop","lib_mask","ifElse","T","base","VALUES","NAMES","invertObj","mathMod","add","curry","uncurryN","plus","Note","Cb","C","C#","Db","D","D#","Eb","E","E#","Fb","F","F#","Gb","G","G#","Ab","A","A#","Bb","B","B#","Interval","1","b2","2","#2","b3","3","b4","4","#4","b5","5","#5","b6","6","bb7","b7","7","Scale","root","note","equals","__","toArray","tuning","from","to","frets","range","masking","palette","scale","fret","Mask","reverse","InstrumentList_toArray","instrument","denormalize","clip","evolve","instruments","assign","Player","Grid","InstrumentList","before","after","acc","tree","children","reducer","r","append","ArrayIterator","iterator","_ref$count","_ref$repeat","bounds","moveForward","cursor","moveStart","clone","goto","_ref2$index","_ref2$count","clamp","canForward","canRepeat","isDone","getDuration","pathOr","Infinity","minDuration","longerThan","at","lt","_slice","juxt","assocPath","d","nexts","values","cond","_","iterators","accumulator","update","when","set","sliced","cursors","_reduce","_reduce2","reset","all","stack","getCursor","reduced","it","last","_it$next","recursive","pop","push","group","item","path","grouped","adjust","pushItem","startIndex","converge","init","popGroup","getIndex","_ref$current","_ref$current$index","_ref2$current","assocPathReduce","getEvents","unnest","filter","tail","reducers","gridGroup","_ref2$next","instrs","initialInstruments","topLeft","topRight","bottomLeft","bottomRight","top","bottom","left","right","oTop","oBottom","oLeft","oRight","Rectangle","vertical","horizontal","Diagonal","asc","desc","Triangle","h","Diamond","diamond","toString","poly","pt","mergeObj","mergeAll","ap","DOM","tag","attrs","classCallCheck","this","child","entries","props","t","textures","lib_textures","_ref5$opacity","opacity","objectWithoutProperties","texture","width","height","viewBox","xmlns","encodeURI","timelines","events","intervals","palettes","backgroundImage","Textures","stroke","fill","lighter","thicker","backgroundColor","borderRadius","borderColor","borderStyle","borderWidth","Clip","masks","groups","toConsumableArray","groupsIterator","initial","tunings","scales","store","createStore","payload","identity","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","App","document","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,KAAA,qBAAAC,QAAA,wBAAAC,KAAA,qBAAAC,IAAA,oBAAAC,MAAA,sBAAAC,OAAA,uBAAAC,KAAA,qBAAAC,SAAA,8CCAlBT,EAAAC,QAAA,CAAkBS,OAAA,uBAAAC,MAAA,sBAAAC,KAAA,qBAAAC,MAAA,sBAAAC,MAAA,sBAAAC,OAAA,uBAAAC,IAAA,mKCSZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,wCCxD3DC,EACJC,YACE,SAACC,EAADC,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAKI,EAALH,EAAA,GAAUI,EAAVJ,EAAA,UACEK,YAAMP,EAADG,OAAAK,EAAA,EAAAL,CAAA,GAAOE,EAAMC,KACpB,IAMJH,OAAOL,YAAcA,EACrBrB,OAAOgC,IAjBL,mBAAAC,EAAAC,UAAAC,OAAIC,EAAJ,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAIF,EAAJE,GAAAJ,UAAAI,GAAA,OACE,SAAAC,GAAG,IAAAC,EAAA,OACDA,EAAAvB,SAAQC,IAARuB,MAAAD,EAAeJ,EAAfM,OAAA,CAAqBH,MAAQA,QCUhCI,EAAOC,ECsCNC,EACAC,UCnDWC,EAAA,SAAAvB,GAcT,IAbJwB,EAaIxB,EAbJwB,IAaIC,EAAAzB,EAZJ0B,cAYI,IAAAD,EAZQE,mBAYRF,EAAAG,EAAA5B,EAXJ6B,eAWI,IAAAD,EAXQD,mBAWRC,EAAAE,EAAA9B,EAVJ+B,YAUI,IAAAD,KAAAE,EAAAhC,EATJiC,YASI,IAAAD,KAAAE,EAAAlC,EARJmC,cAQI,IAAAD,EARQ,EAQRA,EAAAE,EAAApC,EAPJqC,cAOI,IAAAD,EAPQ,kBAAM,MAOdA,EAAAE,EAAAtC,EANJuC,eAMI,IAAAD,EANQ,kBAAM,MAMdA,EAAAE,EAAAxC,EALJyC,iBAKI,IAAAD,EALQ,kBAAM,MAKdA,EAAAE,EAAA1C,EAJJ2C,cAII,IAAAD,EAJQ,kBAAM,MAIdA,EAAAE,EAAA5C,EAHJ6C,cAGI,IAAAD,EAHQ,kBAAM,MAGdA,EAAAE,EAAA9C,EAFJ+C,gBAEI,IAAAD,EAFQ,kBAAM,MAEdA,EAAAE,EAAAhD,EADJiD,gBACI,IAAAD,EADQ,kBAAM,MACdA,EAAAE,EACqBC,mBAASpB,GAD9BqB,EAAAlD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GACGG,EADHD,EAAA,GACUE,EADVF,EAAA,GAAAG,EAEqBJ,mBAASlB,GAF9BuB,EAAAtD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAEGE,EAFHD,EAAA,GAEUE,EAFVF,EAAA,GAAAG,EAGyBR,mBAAShB,GAHlCyB,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAGGE,EAHHD,EAAA,GAGYE,EAHZF,EAAA,GAAAG,EAI2BZ,oBAAUpB,GAJrCiC,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAIGE,EAJHD,EAAA,GAIaE,EAJbF,EAAA,GAOEG,EAAa,kBAAezC,EAAO0C,QAAQC,SAC3CC,EAAa,kBAAe5C,EAAO0C,QAAQG,YAAc,GAMzDC,EAAgBC,sBAAG,SAACC,GAAD,OARShD,EAAO0C,QAAQrC,OAQDuB,GAAQ,GAAOY,GAAW,GAAQ7B,EAAUqC,KACtFC,EAAgBF,sBAAG,SAACC,GAAD,OAAUP,IAAab,GAAQ,GAA0Bf,EAAUmC,KACtFE,EAAgBH,sBAAG,SAACC,GAAD,OAAUJ,IAAaJ,GAAYnC,GAAsBU,EAAUiC,KACtFG,EAAgBJ,sBAAG,SAACC,GAAD,OARSP,IAAWG,IAQGhB,GAAQ,GAAQY,GAAW,GAAOvB,EAAU+B,KACtFI,EAAgBL,sBAAG,SAACC,GAAD,OARShD,EAAO0C,QAAQnC,MAAU,EAQXyB,GAAQ,GAA0Bb,EAAU6B,KACtFK,EAAgBN,sBAAG,SAACC,GAAD,OARShD,EAAO0C,QAAQnC,MAAU,EAQXyB,GAAQ,GAA0BX,EAAU2B,KACtFM,EAAgBP,sBAAG,SAACC,GAAD,OAAQ,eARbvC,EAQc8C,EAADvE,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAKgE,EAAES,OAAOC,MAAd,OARbjD,EASwB8C,EATVpD,EAAQuC,QAAQjC,OAASA,EASX2B,EAAUmB,GAAwBhC,EAAUyB,GAD3D,KAG3BW,GAAY,SAACX,GAAD,OAAOjB,EAAQmB,IAAkBC,KASnD,OAPAS,oBAAU,eAACC,EAAD7E,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAKgB,EAAO0C,QAAZ,OACRf,EAAQkC,EAAExD,OAASwD,EAAElB,QACrBkB,EAAEpD,OAAS0B,EACX0B,EAAEC,iBAAiB,QAASH,IAC5B,kBAAME,EAAEE,oBAAoB,QAASJ,OAIrCK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,SAAOpE,IAAMA,EAAMsE,IAAMpE,IACzBgE,EAAAC,EAAAC,cAAA,WACIvC,EACAqC,EAAAC,EAAAC,cAAA,UAAQG,QAAUpB,GAAlB,SAEAe,EAAAC,EAAAC,cAAA,UAAQG,QAAUvB,GAAlB,QAEAP,GACAyB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAQG,QAAUlB,GAAlB,QACAa,EAAAC,EAAAC,cAAA,UAAQG,QAAUnB,GAAlB,aAINc,EAAAC,EAAAC,cAAA,WACInC,EACAiC,EAAAC,EAAAC,cAAA,UAAQG,QAAUhB,GAAlB,UAEAW,EAAAC,EAAAC,cAAA,UAAQG,QAAUjB,GAAlB,SAGJY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEI,KAAK,QAAQC,IAAI,IAAIC,IAAI,IAAIC,KAAK,OAClCf,MAAWvB,EACXuC,SAAWpB,EACXc,IAAWjE,OCzENwE,cACb,SAAA9G,GAAS,IACC+G,EAA+B/G,EAA/B+G,IADDC,EACgChH,EAA1BiH,KAAQpB,EADdmB,EACcnB,MACfqB,EAFCF,EACqBG,KACR,KAAoB,GAAbtB,EAAMqB,KAAYH,EAE7C,OAAOpG,OAAAyG,EAAA,EAAAzG,CAAA,GAAKX,EAAZ,CAAmBkH,UAErB,CACEG,OAAW,iBAAO,CAAEZ,KAAM,SAC1BvD,UAAW,iBAAO,CAAEuD,KAAM,UAC1BrD,OAAW,iBAAO,CAAEqD,KAAM,UAVfK,CAab,SAAArG,GAAuD,IAQjD6G,EARHrF,EAAoDxB,EAApDwB,IAAKiF,EAA+CzG,EAA/CyG,KAAMG,EAAyC5G,EAAzC4G,OAAQnE,EAAiCzC,EAAjCyC,UAAmBqE,EAAc9G,EAAtB2C,OACzBjB,EAAkBC,mBAD6BuB,EAE7BC,oBAAS,GAFoBC,EAAAlD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GAE9CnB,EAF8CqB,EAAA,GAExCE,EAFwCF,EAAA,GAI/Cf,EAAY0E,sBAAY,kBAAMzD,GAAQ,KACtCf,EAAYwE,sBAAY,kBAAMzD,GAAQ,KACtCX,EAAYoE,sBAAY,kBAAQzD,GAAQ,GAAQwD,MAetD,OANAxB,oBAAU,kBACRmB,EAAOO,WAAWP,GAClB1E,IAASkF,MAAMR,IARL,SAANS,IAAM,OAAML,EAAKM,sBACrB,kBAAMzF,EAAO0C,QAAQG,YAAckC,EAC/BS,IACAN,EAAOH,KAKaS,GACxB,kBAAME,qBAAqBP,MAI3BnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACrE,EAAW,CACVG,SACAF,MACAO,OACAM,SACAE,UACAE,YACAE,gDC3CJrB,EAAK,SAAC+F,EAAOjD,GAAR,OACTkD,YAASxH,IAATwH,CACE,SAACC,EAAWC,EAAKC,GAAjB,OAAuBF,GAAcF,EAAMI,KAAOD,IAClD,EACApD,IAGEmD,EAAY,SAACF,EAAOjD,GAAR,OAAoB9C,EAAG+F,EAAOjD,GAAW,GAAK,MAU1DsD,EAAS,SAAAzH,GAAA,IAAG0H,EAAH1H,EAAG0H,QAASvD,EAAZnE,EAAYmE,QAASwD,EAArB3H,EAAqB2H,MAArB,OACbA,EAAQ,GACNlC,EAAAC,EAAAC,cAAA,cACK,eAACiC,EAADnH,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAXQ,SAACiH,EAASvD,GAAV,OACd,eAAC0D,EAADpH,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAUqH,YACP,SAAA/H,GAAA,IAAGgI,EAAHhI,EAAGgI,SAAH,OAAkB1G,EAAG0G,EAAU5D,IAC/BuD,GAFH,OAICG,GAAUA,EAAOF,MAJlB,GAUWK,CAASN,EAASvD,GAAvB,OACDyD,GAAMnC,EAAAC,EAAAC,cAAA,gBAASiC,EAAT,KADL,GAGHnC,EAAAC,EAAAC,cAAA,gBAAA1E,OAAa0G,MAIJvB,cACb,SAAA9G,GAAK,OAAIA,GADI8G,CAGb,SAAA6B,GAAA,IAAAC,EAAAD,EAAG3K,KAAQ6K,EAAXD,EAAWC,SAAXC,GAAAF,EAAqBP,MAArBM,EAA8Bb,OAA9BiB,EAAAD,EAAuChB,aAAvC,IAAAiB,EAA+C,GAA/CA,EAAmDX,EAAnDU,EAAmDV,QAAnD,OACEjC,EAAAC,EAAAC,cAAA,QAAM2C,UAAYC,IAAOjL,MAErB6K,EAASK,IAAI,SAAAC,EAAyBC,GAAzB,IAAG9K,EAAH6K,EAAG7K,KAAM+K,EAATF,EAASE,MAAOhB,EAAhBc,EAAgBd,MAAhB,OACblC,EAAAC,EAAAC,cAAA,WACExF,IAAMuI,EACNJ,UAAYC,IAAOhL,QACnB+J,UAAYA,EAAUF,EAAO,CAACsB,KAE5B9K,GACA6H,EAAAC,EAAAC,cAAA,YAAQ/H,GAEV6H,EAAAC,EAAAC,cAACiD,EAAD,CAAQlB,QAAUA,EAAUvD,QAAU,CAACuE,GAAKf,MAAQA,IAEpDgB,EAAMH,IAAI,SAAChL,EAAMqL,GAAP,OACRpD,EAAAC,EAAAC,cAAA,QACExF,IAAM0I,EACNP,UAAYC,IAAO/K,KACnB8J,UAAYA,EAAUF,EAAO,CAACsB,EAAGG,KAGjCrL,EAAKsL,KAAKN,IAAI,SAAAO,EAA2BC,GAA3B,IAAGnB,EAAHkB,EAAGlB,OAAQF,EAAXoB,EAAWpB,MAAOsB,EAAlBF,EAAkBE,MAAlB,OACZxD,EAAAC,EAAAC,cAAA,OACExF,IAAM6I,EACNV,UAAYC,IAAO9K,IACnByL,MAAQrB,EAAS,GAAK,KACtBsB,IAAMxB,EAAQ,EAAI,GAAK,KACvBL,UAAYA,EAAUF,EAAO,CAACsB,EAAGG,EAAGG,KAGpCvD,EAAAC,EAAAC,cAAA,UAAQ2C,UAAYC,IAAO5K,QACvBsL,EAAMT,IAAI,SAAAY,EAAsB5B,GAAtB,IAAG9J,EAAH0L,EAAG1L,MAAOG,EAAVuL,EAAUvL,SAAV,OACV4H,EAAAC,EAAAC,cAAA,SACE2C,UAAYC,IAAO7K,MACnB2L,MAAO,CAAEC,SAAUzL,GACnBsC,IAAMqH,EACNF,UAAYA,EAAUF,EAAO,CAACsB,EAAGG,EAAGG,EAAGxB,KAEvC/B,EAAAC,EAAAC,cAAA,QAAM2C,UAAYC,IAAO3K,MAASF,GAClC+H,EAAAC,EAAAC,cAAA,YAAU2C,UAAYC,IAAO1K,SAAWA,SAAWA,QAKzD4H,EAAAC,EAAAC,cAACiD,EAAD,CAAQlB,QAAUA,EAAUvD,QAAU,CAACuE,EAAGG,EAAGG,GAAKrB,MAAQA,iCC5E1E4B,EAAA,SAAAxJ,GAAA,IAAGgG,EAAHhG,EAAGgG,KAAM/H,EAAT+B,EAAS/B,KAAMwL,EAAfzJ,EAAeyJ,OAAf,OACE/D,EAAAC,EAAAC,cAAA,cAAY2C,UAAY,CAACC,IAAOxC,GAAO/H,EAAOuK,IAAOvK,KAAO,IAAIyL,KAAK,MAEjED,EAAOhB,IAAI,SAACkB,EAASvJ,GAAV,OACXsF,EAAAC,EAAAC,cAAA,SAAO2C,UAAYC,IAAOrK,MAAQiC,IAAMA,GAEpCuJ,EAAQlB,IAAI,SAACvK,EAAOkC,GAAR,OACZsF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAYC,IAAOpK,OAASgC,IAAMA,GAEtClC,EAAMuK,IAAI,eAAAxI,EAAAS,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAkC,GAAlCkJ,EAAA3J,EAAG4J,aAAH,IAAAD,EAAW,CAAC,MAAZA,EAAAE,EAAA7J,EAAmBqJ,aAAnB,IAAAQ,EAA2B,GAA3BA,EAAsC1J,EAAtCM,UAAAC,OAAA,EAAAD,UAAA,QAAAwE,EAAA,OACVQ,EAAAC,EAAAC,cAAA,SAAO2C,UAAYC,IAAOtK,MAAQkC,IAAMA,GAEpCyJ,EAAMpB,IAAI,SAACsB,EAAU3J,GAAX,OACVsF,EAAAC,EAAAC,cAAA,OACExF,IAAYA,EACZmI,UAAYC,IAAOnK,IACnBiL,MAAKpJ,OAAAyG,EAAA,EAAAzG,CAAA,CAAQ6J,YAAaT,mDCd1CU,EACJ,SAACC,EAAMxB,GAAP,OACE,SAACrI,GAAD,OACE,SAACgF,GAAD,OACE9D,YAAGT,MAAQuE,GAAkB8E,EAAkBD,EAAMxB,EAAxByB,CAA6B9J,EAA7B8J,CAAkC9E,GAC/D9D,YAAGpB,OAAQkF,GAAkB+E,EAAkBF,EAAMxB,EAAxB0B,CAA6B/E,GAC1DqD,EAAIrI,IAAQ6J,EAAKxB,EAAIrI,IAAQ6J,EAAKxB,EAAIrI,IAAMgF,GAC5C6E,EAAK7J,GAAwB6J,EAAK7J,GAAKgF,GACVA,KAE/B8E,EACJ,SAACD,EAAMG,GAAP,OACEC,YAAQ5B,IAAKuB,EAAiBC,EAAMG,KAElCD,EACJ,SAACF,GAAD,IAjBaK,EAiBN7B,EAAP/H,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAa,GAAb,OAjBa4J,EAkBJN,EAAiBC,EAAMxB,GAlBb8B,YAAc,SAACnF,EAAOhF,GAAR,OAAgBkK,EAAGlK,EAAHkK,CAAQlF,MAoB5C+E,qGC8BTK,EACJ,SAAA/C,GAAC,OACCgD,YAhBF,SAAAhD,GAAC,OACC4C,YACEpJ,YAAMyJ,KACNC,YACEC,IACA,CACEC,YAAIpD,GACJqD,YAAIrD,MASNsD,CAAWtD,KAIbuD,GACJ,SAAAvD,GAAC,OACC,SAAAwD,GAAC,OACC,SAAAjL,GAAA,IAAGkL,EAAHlL,EAAGkL,KAAHC,EAAAnL,EAASoL,eAAT,IAAAD,EAAmB,EAAnBA,EAAAE,EAAArL,EAAsBsL,eAAtB,IAAAD,EAAgC,EAAhCA,EAAA,OACEhB,YAAQG,EAAYS,EAAIK,GAAUC,YAAU,IAAKC,YAAK/D,EAAI2D,GAA1Df,CAAoEa,MAS7DO,GAJb,SAAAhE,GAAC,OACC,SAAAwD,GAAC,OACCZ,YAAQqB,YAAO/K,IAAQ8J,YAAIO,GAAOvD,EAAPuD,CAAUC,IAAKU,KAAIJ,YAAU,oDCvD/CK,GAAA,SAAAC,GAQb,IAAMC,EAAQC,aAAUF,GAIlBhO,EACJ,SAAAuH,GAAK,OACH0G,EAAME,aAAQ5G,EAhBV,MAoBFA,EACJ,SAAAvH,GAAI,OACFgO,EAAOhO,IAILoO,EAAMC,aAAMC,aAAS,EACzB,SAAAlH,GAAC,OACCoF,YACExM,EACAuO,aAAKnH,GACLG,MAIN,MAAO,CACLyG,SACAC,QACAjO,OACAuH,QACA6G,QCjCWI,GAVFT,GAAK,CAChBU,GAAM,GAAIC,EAAM,EAAGC,KAAO,EAC1BC,GAAO,EAAGC,EAAM,EAAGC,KAAO,EAC1BC,GAAO,EAAGC,EAAM,EAAGC,KAAO,EAC1BC,GAAO,EAAGC,EAAM,EAAGC,KAAO,EAC1BC,GAAO,EAAGC,EAAM,EAAGC,KAAO,EAC1BC,GAAO,EAAGC,EAAM,EAAGC,KAAM,GACzBC,GAAM,GAAIC,EAAK,GAAIC,KAAO,ICGbC,GAVE/B,GAAK,CACAgC,EAAM,EAChBC,GAAO,EAAGC,EAAM,EAAGC,KAAM,EACzBC,GAAO,EAAGC,EAAM,EAChBC,GAAO,EAAGC,EAAM,EAAGC,KAAM,EACzBC,GAAO,EAAGC,EAAM,EAAGC,KAAM,EACzBC,GAAO,EAAGC,EAAM,EAC1BC,IAAO,EAAGC,GAAM,GAAIC,EAAK,wBCuBZC,GAXb,SAAAC,GAAI,OACF,SAAAC,GAAI,OACFhH,YACEsC,YACE2E,aAAO3C,GAAKjH,MAAM2J,IAClB1C,GAAKjH,MACLiH,GAAKJ,IAAIgD,KAAIH,GACbnB,GAASvI,4BCzBb8J,GACJ,SAAAlP,GAAA,IAAGmP,EAAHnP,EAAGmP,OAAQC,EAAXpP,EAAWoP,KAAMC,EAAjBrP,EAAiBqP,GAAI5F,EAArBzJ,EAAqByJ,OAArB,OACG,eAAC6F,EAAD5O,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAS6O,aAAMH,EAAMC,EAAK,GAA1B,OACC5G,YACE,SAAAxI,GAAA,IAAG4J,EAAH5J,EAAG4J,MAAO2F,EAAVvP,EAAUuP,QAASC,EAAnBxP,EAAmBwP,QAASX,EAA5B7O,EAA4B6O,KAAMY,EAAlCzP,EAAkCyP,MAAlC,OACEpI,YAASmB,IAATnB,CACE,SAACrJ,EAAMG,GAAP,OACEqK,YACE,SAACkH,GAAD,OACEC,GAAexR,EAAfwR,CAAuBR,EAAOO,EAA9BC,CAAoCJ,GAC/B,eAACT,EAADrO,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAQ2L,GAAKJ,IAAI0D,EAATtD,CAAepO,GAAvB,MAAkC,CACjC4L,QACAP,MAAOmG,EAAQZ,GAAkBC,EAAlBD,CAAwBE,EAAxBF,CAA8Ba,KAF9C,GAID,IACNJ,IAEJO,aAAQV,KAEZ1F,GAjBH,IAsBHqG,GAAA,SAACvQ,GAAD,OACE,SAACwQ,GAAD,OACG,eAAA7H,EAAAxH,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAkBqP,EAAf/J,EAAHkC,EAAGlC,KAAMoJ,EAATlH,EAASkH,KAAT,MACE,CACCpJ,OACA/H,KPzCY,WOyCJ+H,GAA4B,IAAToJ,EAC3B3F,OAAQ5B,YACNqH,GACAc,EAAYzQ,EAAO,CACjB4P,OAAS,UACTc,KAAS,QACT/E,KAAS,QACTuE,QAAS,WACTC,MAAS,WAPL7H,CASNkI,IAbL,cC/BQ1J,eACb,SAAC9G,GAAD,OACE2Q,aAAO,CACLC,YAAa1H,YAAIyG,GAAQ3P,KAD3B2Q,CAEG3Q,IAJQ8G,CAMb,SAAArG,GAAA,IAAGmQ,EAAHnQ,EAAGmQ,YAAH,OACEzK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIsK,EAAY1H,IAAI,SAACsH,EAAY3P,GAAb,OAChBsF,EAAAC,EAAAC,cAAC4D,EAADtJ,OAAAkQ,OAAA,CAAYhQ,IAAMA,GAAW2P,SCZtB1J,iBACb,WACE,OACEX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACyK,EAAD,MACA3K,EAAAC,EAAAC,cAAC0K,EAAD,MACA5K,EAAAC,EAAAC,cAAC2K,GAAD,oCCOKzQ,GACX,SADWA,EAET0Q,EACAC,EACApP,GAHF,OAKE,SACEqP,EACAC,GAFF,IAGEtJ,EAHF3G,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAGqB,GAHrB,OAKG,SACCkQ,EACAF,EACAG,GAHD,OAKE,SACCH,GADD,OAICD,EAAMC,EAAKC,EAAMtJ,GAJlB,CAMCuJ,EAEItJ,YAASwJ,IAATxJ,CACA,SAACoJ,EAAKC,EAAMlJ,GAAZ,OAEEoJ,EAAQH,EAAKC,EAAMI,aAAOtJ,EAAGJ,KAC/BqJ,EACAE,GAGAF,GArBP,CAwBCrP,EAAIsP,EAAMtJ,GACVmJ,EAAOE,EAAKC,EAAMtJ,GAClBvH,EAAO0Q,EAAQC,EAAOpP,gFC/Cf2P,GAAA,SAAAhR,GAAgC,IACvCiR,EADuCC,EAAAlR,EAA7B4H,aAA6B,IAAAsJ,EAArB,EAAqBA,EAAAC,EAAAnR,EAAlB8H,cAAkB,IAAAqJ,EAAT,GAASA,EAEvCC,EAAS,CACbnL,IAAK,CACHoB,OAAQ,EACRO,MAAQ,GAEV1B,IAAK,CACHmB,MAAOS,EAAOnH,OAAS,EACvBiH,UAQEyJ,EAAc,mBAJIC,EAAOjK,MAIQ,CAAEjC,MAFnB0C,EAAOwJ,EAAOjK,SAG9BkK,EAAc,kBAJID,EAAOjK,OAAS,IAAKiK,EAAO1J,MAIfyJ,KAM/BC,EAASE,aAAMJ,EAAOnL,KAM5B,OAAQgL,EAAW,CAKjBK,OAAQ,kBAAME,aAAMF,IAKpBG,KAAM,eAAAxR,EAAAS,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAA0D,GAA1DgR,EAAAzR,EAAGoH,aAAH,IAAAqK,EAAWN,EAAOnL,IAAIoB,MAAtBqK,EAAAC,EAAA1R,EAA6B2H,aAA7B,IAAA+J,EAAqCP,EAAOnL,IAAI2B,MAAhD+J,EAAA,OACJL,EAAOjK,MAAQuK,aAAMR,EAAOnL,IAAIoB,MAAO+J,EAAOlL,IAAImB,MAAOA,GACzDiK,EAAO1J,MAAQgK,aAAMR,EAAOnL,IAAI2B,MAAOwJ,EAAOlL,IAAI0B,MAAOA,GACzDqJ,GAOFzK,KAAM,WACJ,IAAMqL,EAAaP,EAAOjK,MAAQ+J,EAAOlL,IAAImB,MACvCyK,EAAaR,EAAO1J,MAAQwJ,EAAOlL,IAAI0B,MAG7C,OAFoBiK,IAAeC,EAEf,CAAEpL,MAAM,GACrBmL,EAAaR,IACAE,iFClDpBQ,GAAclK,YAAEmH,cAAO,GAAOxD,YAAK,SACnCwG,GAAcC,aAAOC,IAAU,CAAC,QAAS,aACzCC,GAActK,YAAE/H,YAAOmG,KAAKiM,KAAWzJ,YAAIuJ,KAC3CI,GAAc,SAAAC,GAAE,OAAIxK,YAAEyK,aAAGD,GAAKL,KAE9BO,GACJ,SAAAF,GAAE,OACAG,aAAK,CACHC,aAAU,CAAC,QAAS,YAAaJ,GACjCnC,aAAO,CAAE9K,MAAO,CAAEtH,SAAU,SAAA4U,GAAC,OAAIA,EAAIL,SAgB5BxK,gBjBtBZ1G,EiBkBD,SAACwR,EAAD3S,KAAUyG,KAAV,IAAgB2C,EAAhBpJ,EAAgBoJ,IAAhB,OACG,SAACwJ,GAAD,IATHP,EASYvU,EAAT4C,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAoByR,GAAYQ,GAAhC,MACC,CAAClK,aAVL4J,EAUevU,EATb+U,aAAK,CACH,CAACd,GAAgB,SAAAe,GAAC,MAAI,KACtB,CAACV,GAAWC,GAAKE,GAAOF,IACxB,CAAC,SAAAS,GAAC,OAAI,GAAW,SAAAA,GAAC,MAAI,CAACA,QAMtBrK,CAAqBkK,GAAQ,CAAElM,KAAM2C,EAAKA,IAAKA,EAAMtL,IADvD,IjBnBKsD,EiBuBkB,CAAEqF,KAAM,EAAG2C,IAAK,GjBtBxC,SAAC2J,GACC,IAAI9B,EACA0B,EAAQ9R,MAAMkS,EAAUpS,QACxBqS,EAAcxB,aAAMpQ,GAElB6R,EAAS3L,YAASmB,IAATnB,CAAc,SAACd,EAAMiB,GAAP,OAAayL,aAAK,SAAAJ,GAAC,OAAKA,GAAGC,EAAUtL,GAAGjB,KAAMA,KAErE2M,EAAM,SAAAnT,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAEoT,EAAFnT,EAAA,GAAUyQ,EAAVzQ,EAAA,UACT,SAAC2S,EAAQS,GAAT,IAAAC,EAAAC,EAAA,OACCD,EAAkBxT,YAChB,SAAAoI,EAAAQ,GAAA,IAAAM,EAAA9I,OAAAC,EAAA,EAAAD,CAAAgI,EAAA,GAAE0K,EAAF5J,EAAA,GAAU2J,EAAV3J,EAAA,GAAAK,EAAAnJ,OAAAC,EAAA,EAAAD,CAAAwI,EAAA,GAAmBtD,EAAnBiE,EAAA,GAA0B7C,EAA1B6C,EAAA,SAAoC,CAClC0H,aAAOmC,aAAK,SAAAJ,GAAC,QAAMA,GAAGtH,YAAK,SAApB0H,CAA8B9N,GAAQwN,GAC7C7B,aAAOvK,EAAMmM,KAEf,CAAC,GAAI,IACLS,GANDR,GAADW,EAAArT,OAAAC,EAAA,EAAAD,CAAAoT,EAAA,OAASX,EAATY,EAAA,GAQAP,EAActC,EACd,CAAEtL,MAAMlF,OAAAyG,EAAA,EAAAzG,CAAA,CAAG0S,UAAWI,IAVvB,IAaH,OAAQ/B,EAAW,CACjBuC,MAAO,kBACLT,EAActK,YAAIZ,YAAE+C,IAAMY,YAAK,UAAjB/C,CAA4BsK,GAC1CC,EAAcxB,aAAMpQ,GACpB6P,GAEFK,OAAQ,kBAAM7I,YAAIZ,YAAE+C,IAAMY,YAAK,WAAjB/C,CAA6BsK,IAC3CvM,KAAM,WAIJ,OAHAmM,EAAQM,EAAON,GACA9K,YAAE4L,aAAIzE,cAAO,IAAQvG,YAAI+C,YAAK,SAA9B3D,CAAwC8K,GAEvC,CAAEjM,MAAM,GACRmB,YAAEsL,EAAKhS,EAAP0G,CAAc8K,EAAOK,OiBV7CvK,YCjBa,SAAAzI,GAAgC,IACzCiR,EADyCC,EAAAlR,EAA7B4H,aAA6B,IAAAsJ,EAArB,EAAqBA,EAAAC,EAAAnR,EAAlB8H,cAAkB,IAAAqJ,EAAT,GAASA,EAEzCuC,EAAS,CAAC1C,GAAc,CAAEpJ,QAAOE,YACjCwJ,EAAS,GAEPqC,EAAY,kBAAMrC,EAAS7I,YAAIZ,YAAE+C,IAAMY,YAAK,WAAjB/C,CAA6BiL,IAK9D,OAAQzC,EAAW,CAKjBK,OAAQ,kBAAME,aAAMF,IAKpBkC,MAAO,kBAAQvC,EAASQ,OAAQR,GAKhCQ,KAAM,eAACH,EAAD5Q,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAU,GAAV,OAEJgT,EAAQ7L,YACN2D,YAAK,SACL1L,YACE,SAAAG,EAEEqR,GAFF,IACIoC,EADJzT,EACIyT,MAAOtP,EADXnE,EACWmE,QAET6M,EAHFvQ,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAGasQ,GAAc5M,GAASqN,KAAKH,GACvCjK,EAJF3G,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAIauQ,EAASK,SAASjK,MAJ/B,OAMEjD,EAAQ0D,OACH,CACD4L,MAAO3C,aAAOE,EAAPF,CAAiB2C,GACxBtP,QAASA,EAAQ0D,OAAOT,IAExBuM,aAAQ,CAAEF,QAAOtP,aACvB,CAAEsP,MAAO,GAAItP,QAAS,CAAEwD,QAAOE,YAf3BD,CAiBNyJ,EAAO3Q,OAAS2Q,EAAS,CAAC,KAE5BqC,IAEA1C,GAOFzK,KAAM,WACJ,IAAMqN,EAAKC,aAAKJ,GAChB,IAAKG,EAAI,MAAO,CAAEnN,MAAM,GAFd,IAAAqN,EAIYF,EAAGrN,OAAnBpB,EAJI2O,EAIJ3O,MAAOsB,EAJHqN,EAIGrN,KACPsN,EAAgB5O,GAASA,EAAMwC,OAASxC,EAAM0C,OAEpD,OAAOpB,GAvDagN,EAAMO,MAA4BhD,EAASzK,QAwDxDwN,EAvDE,SAAA5O,GAAK,OAAMsO,EAAMQ,KAAKlD,GAAc5L,IAAS6L,EAASzK,OAuD5C0N,CAAK9O,IACHuO,IAAa,CAAEvO,eClF7B+O,IlBiDT9S,EkBhDF,SAAC+S,EAAM/M,GAAP,OAAiB+M,EAAK,CAAC,WAAY,QAAS,OAAQ,SAAS/M,EAAM1G,UlBiDjEW,EkBhDF,SAAC8S,EAAM/M,GAAP,OAAkC,IAAjBA,EAAM1G,QlBgDhB,SAGHgQ,GADF,OAGE9I,YACEwM,aAAK,CAAC,EAAG,SAAU,IACnBvU,GAIE,SAACwU,EAASF,EAAM/M,GAAhB,OACEQ,YACEqL,aAAK,SAAAJ,GAAC,OAAIxR,EAAG8S,EAAM/M,IAnC/B,SAAA+M,GAAI,OACFG,cACG,EACDrE,aAAO,CAAEpI,OAAQiJ,aAAOqD,MAgCWI,CAASlU,YAAM,CAAE+G,SAAS+M,KACrDlB,aAAK,SAAAJ,GAAC,OAAIsB,EAAKtM,SAzB3B2M,EAyBiDpN,EAxB/C0J,aAAO,CAAE0D,aAAY7M,MAAO,EAAGE,OAAQ,OAsB/BD,CAGEyM,GA1BZ,IAAAG,GA8BQ,SAACH,EAADtU,EAAqBqH,GAArB,IAAYO,EAAZ5H,EAAY4H,MAAZ,OACEsL,aAAK,SAAAJ,GAAC,OAAIlL,GA3DpB,SAACI,EAAUJ,GAAX,OACE8M,aACEH,cAAQ,GACR,CACE1M,YACE,SAAAiM,GAAI,OAAI5D,aAAO,CAAEpI,OAAQD,YAAEkJ,KAAQzQ,YAAMwT,GAAhBjM,CAAuB,CAAEG,WAAUJ,aAC5DkM,MAEFa,OAmDqBC,CAASvN,EAAOO,GAAjCsL,CAAyCoB,IAG3CjT,GApBE,CAuBJ,CAAC,CAAEyG,OAAQ,KACXxH,YAAM,CAAEwH,QAAQ,EAAMF,MAAO,GAAK+I,MkBxE7BkE,GACX,SAACtX,GAAD,IAAO6G,EAAP1D,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAiByT,GAAM5W,GAAvB,OACEsK,YACE,SAAA7H,GAAA,IAAA8U,EAAA9U,EAAGoE,QAAH2Q,GAAAD,OAAA,IAAAA,EAA6B,GAA7BA,GAAczN,MAAd,MAAgD,CAAEA,WAAlD,IAAA0N,EAAsB,GAAtBA,EAAyDpN,QAAzD3H,EAAiC2H,UACjC7H,YACE,SAAAG,EAAAiI,GAAA,IAAA8M,EAAA/U,EAAGmE,QAAWqQ,EAAdO,EAAcP,WAAYzM,EAA1BgN,EAA0BhN,SAAUF,EAApCkN,EAAoClN,OAAUH,EAA9C1H,EAA8C0H,QAAaN,EAA3Da,EAA2Db,MAAOO,EAAlEM,EAAkEN,MAAlE,MAA+E,CAC7ExD,QAAS0D,EAAOT,GAChBM,QAASoJ,aAAO,CAAE0D,aAAYzM,WAAUJ,SAASD,KAEnD,CAAEvD,UAASuD,QAAS,8CCFtBsN,GACJnV,YACE,SAACP,EAADS,GAAA,IAAUqU,EAAVrU,EAAUqU,KAAMjP,EAAhBpF,EAAgBoF,MAAhB,OACEqN,aAAU4B,EAAMjP,EAAO7F,KAGvB2V,GAAYrN,YAChBsN,KACAC,aAAO,SAAAtC,GAAC,OAAIA,IACZrK,YAAI+C,YAAK,WACT6J,KACA7J,YAAK,WASD8J,GAAW,CACf9O,KAAM,SAACjH,GAAD,OAAY,eAAAU,EAAAS,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAC4DnB,EAA1EhC,EADc0C,EACd1C,KAAMgY,EADQtV,EACRsV,UAAWtE,EADHhR,EACGgR,SADHuE,EAAAvV,EACauG,KAAQpB,EADrBoQ,EACqBpQ,MAAOsB,EAD5B8O,EAC4B9O,KAAqB+O,EADjDxV,EACoCkQ,YACpDmB,EAFgB5Q,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAEFuQ,EAASK,SAAS,GAChCjK,EAHgB3G,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAGFmU,GAAStX,EAAMgY,EAAfV,CAA0BvD,GACxC9K,EAJgB9F,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAIFuQ,EAASzK,OACvB2J,EALgBzP,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAKFuU,GAAgBQ,EAAQP,GAAU9P,IALhC,OAOhBsB,EAAOnH,EAAHW,OAAAyG,EAAA,EAAAzG,CAAA,GAAiBX,EAAjB,CAAwB8H,QAAOb,OAAM2J,gBAPzB,IAQlBwE,KAAM,SAACpV,GAAD,OAAY,eAAA2I,EAAAxH,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GACoCnB,EAAlDhC,EADc2K,EACd3K,KAAMgY,EADQrN,EACRqN,UAAWtE,EADH/I,EACG+I,SAAUyE,EADbxN,EACawN,mBAC7BpE,EAFgB5Q,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAEFuQ,EAASuC,QAAQlC,SAAS,GACxCjK,EAHgB3G,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAGFmU,GAAStX,EAAMgY,EAAfV,CAA0BvD,GACxC9K,EAJgB9F,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAIFuQ,EAASzK,OACvB2J,EALgBzP,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAKFgV,EALE,OAAAxV,OAAAyG,EAAA,EAAAzG,CAAA,GAOVX,EAPU,CAOHiH,OAAMa,QAAO8I,gBAPV,IAQlBqD,MAAO,SAACjU,GAAD,OACJ,eAAAmJ,EAAAhI,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAkB4U,GAAf9O,EAAHkC,EAAGlC,KAAMmO,EAATjM,EAASiM,KAAT,OACC9M,YAAErB,EAAMmO,EAAR9M,CAActI,GADf,mCCnDCoW,GAAc,SAAAhN,GAAC,MAAI,CAAC,EAAG,IACvBiN,GAAc,SAAAjN,GAAC,MAAI,CAAC,EAAG,IACvBkN,GAAc,SAAAlN,GAAC,MAAI,CAAC,EAAG,IACvBmN,GAAc,SAAAnN,GAAC,MAAI,CAAC,EAAG,IACvBoN,GAAc,SAAApN,GAAC,MAAI,CAACA,EAAG,IACvBqN,GAAc,SAAArN,GAAC,MAAI,CAACA,EAAG,IACvBsN,GAAc,SAAAtN,GAAC,MAAI,CAAC,EAAGA,IACvBuN,GAAc,SAAAvN,GAAC,MAAI,CAAC,EAAGA,IACvBwN,GAAc,SAAAxN,GAAC,OAAIoN,GAAO,EAAIpN,IAC9ByN,GAAc,SAAAzN,GAAC,OAAIqN,GAAO,EAAIrN,IAC9B0N,GAAc,SAAA1N,GAAC,OAAIsN,GAAO,EAAItN,IAC9B2N,GAAc,SAAA3N,GAAC,OAAIuN,GAAO,EAAIvN,IAU9B4N,GAAY,CAChBR,IAAY,CAAEJ,GAAcC,GAAcM,GAAWD,IACrDD,OAAY,CAAEF,GAAcD,GAAaQ,GAAWC,IACpDL,KAAY,CAAEN,GAAcE,GAAcG,GAAWD,IACrDG,MAAY,CAAEN,GAAcE,GAAaM,GAAWD,IACpDK,SAAY,CAdM,SAAA7N,GAAC,OAAIoN,IAAQ,EAAIpN,GAAK,IACtB,SAAAA,GAAC,OAAIqN,IAAQ,EAAIrN,GAAK,IAItB,SAAAA,GAAC,OAAIqN,IAAQ,EAAIrN,GAAK,IADtB,SAAAA,GAAC,OAAIoN,IAAQ,EAAIpN,GAAK,KAWxC8N,WAAY,CATM,SAAA9N,GAAC,OAAIsN,IAAQ,EAAItN,GAAK,IACtB,SAAAA,GAAC,OAAIuN,IAAQ,EAAIvN,GAAK,IAJtB,SAAAA,GAAC,OAAIuN,IAAQ,EAAIvN,GAAK,IADtB,SAAAA,GAAC,OAAIsN,IAAQ,EAAItN,GAAK,MAgBpC+N,GAAW,CACfC,IAAM,CAACf,GAAUM,GAASF,GAAQH,GAAaQ,GAASF,IACxDS,KAAM,CAACjB,GAAUI,GAAQO,GAASR,GAAaM,GAAUH,KAGrDY,GAAW,CACflB,QAAa,CAACA,GAAcI,GAAQE,IACpCL,SAAa,CAACA,GAAaO,GAASD,IACpCL,WAAa,CAACA,GAAaO,GAASC,IACpCP,YAAa,CAACA,GAAcE,GAAQM,KAGhCrR,GAAK,SAAA0D,GAAC,MAAI,CAAC,GAAKA,IAChBmO,GAAK,SAAAnO,GAAC,MAAI,CAACA,EAAK,KAKhBoO,GAAU,CACdC,QAAS,CALA,SAAArO,GAAC,OAAI1D,GAAE0D,EAAI,KACX,SAAAA,GAAC,OAAImO,GAAE,IAAMnO,IACb,SAAAA,GAAC,OAAI1D,GAAE,IAAM0D,IACb,SAAAA,GAAC,OAAImO,GAAEnO,EAAI,OAKhBsO,GAAW,SAAAC,GAAI,MACnB,WACEA,EAAKzO,IAAI,SAAA0O,GAAE,OAAIA,EAAG1O,IAAI,SAAAZ,GAAC,OAAQ,IAAJA,EAAU,MAAK6B,KAAK,OAAMA,KAAK,KAC1D,KACE0N,GAAW/M,YAAQgN,KAAUzE,MAC7B1C,GAAWzH,YAAI,SAAAqK,GAAC,OAAIzI,YAAQ4M,GAAUK,aAAGxE,GAAI,SAAAA,GAAC,MAAI,CAACA,OAE1CzI,eAAQ6F,GAAQkH,GAAhB/M,CAA0B,CACvCkM,aACAG,YACAG,YACAE,iDCnEIQ,cACJ,SAAAA,IAAiD,IAArCC,EAAqC9W,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAA/B,GAAI+W,EAA2B/W,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAnB,GAAIkQ,EAAelQ,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAJ,GAAIR,OAAAwX,GAAA,EAAAxX,CAAAyX,KAAAJ,GAC/CI,KAAKH,IAAWA,EAChBG,KAAKF,MAAWA,EAChBE,KAAK/G,SAAWA,sDAGX4G,GACL,IAAMI,EAAQ,IAAIL,EAAIC,GAGtB,OAFAG,KAAK/G,SAASsD,KAAK0D,GAEZA,+BAGJxX,EAAKgF,GAGR,OAFAuS,KAAKF,MAAMrX,GAAOgF,EAEXuS,iCAGLrN,GACF,OAAOA,EAAGqN,KAAKH,IAAKG,KAAKF,MAAOE,KAAK/G,SAASnI,IAAI,SAAAmP,GAAK,OAAIA,EAAMnP,IAAI6B,yCAIrE,OAAOqN,KAAKlP,IACV,SAAC+O,EAAKC,EAAO7G,GAOX,OAHA6G,GAHAA,EAAQvX,OAAO2X,QAAQJ,GACpBhP,IAAI,SAAAzI,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAEnC,EAAFoC,EAAA,GAAQmF,EAARnF,EAAA,YAAAiB,OAAuBrD,EAAvB,MAAAqD,OAAkCkE,EAAlC,OACJsE,KAAK,MACW,IAAM+N,EAAQ,GACjC7G,EAAWA,EAASlH,KAAK,IAEzB,IAAAxI,OAAYsW,GAAZtW,OAAoBuW,EAApB,KAAAvW,OAA+B0P,EAA/B,MAAA1P,OAA8CsW,EAA9C,0CAKU3Q,EAAIb,EAAM8R,GACxB,IAAIpF,EAAI,IAAI6E,EAeZ,OAbArX,OAAO2X,QAAQC,GAAOhY,OACpB,SAACiY,EAAD7P,GAAA,IAAAQ,EAAAxI,OAAAC,EAAA,EAAAD,CAAAgI,EAAA,GAAKrK,EAAL6K,EAAA,GAAWtD,EAAXsD,EAAA,UACEqP,EAAEla,IAA4B,oBAAZka,EAAEla,GAChBka,EAAEla,GAAMuH,GACR2S,GACNC,KAAShS,KALX9F,CAMEwS,GAEFA,EAAIA,EAAE9B,SAAS,GAEL,MAAN/J,IACF6L,EAAE9B,SAAS,GAAG6G,MAAM5Q,GAAKA,GAEpB6L,WAIIuF,GAAA,SAAAjP,GAAyC,IAQtC+O,EARAlR,EAAsCmC,EAAtCnC,GAAIb,EAAkCgD,EAAlChD,KAAkCkS,EAAAlP,EAA5BmP,eAA4B,IAAAD,EAAlB,EAAkBA,EAAZJ,EAAY5X,OAAAkY,GAAA,EAAAlY,CAAA8I,EAAA,yBAChDqP,EAAUd,GACbS,SAASnR,EAAIb,EAAM8R,GACnBlH,SAAS,GAEN0H,EAAUD,EAAQZ,MAAMa,MACxBC,EAAUF,EAAQZ,MAAMc,OACxBC,EAAO,OAAAtX,OAAWoX,EAAX,KAAApX,OAAsBqX,GAGnC,OAFgBR,EAGd,IAAIR,GACF,MACA,CAAEe,QAAOC,SAAQC,UAASC,MAzElB,6BAyEyBN,WACjCE,EAAQzH,UANK,2BAAA1P,OAAgCwX,UAAUX,EAAEd,YAA5C,OC1DN1Z,GAAO,CAClBuK,QAAQ,EACRF,MAAO,EACPQ,SAAU,CACR,CACEvK,KAAM,iBACNiK,QAAQ,EACRF,MAAO,EACPgB,MAAO,CACL,CACEG,KAAM,CACJ,CAAEjB,QAAQ,EAAMoB,MAAO,CACrB,CAAEpL,SAAU,EAAGH,MAAO,KACtB,CAAEG,SAAU,EAAGH,MAAO,KACtB,CAAEG,SAAU,EAAGH,MAAO,KACtB,CAAEG,SAAU,EAAGH,MAAO,OAExB,CAA0BuL,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,OACxD,CAA0BuL,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,OACxD,CAAEmK,QAAQ,EAAMF,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,OACxD,CAAEmK,QAAQ,EAAMF,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,OACxD,CAAgBiK,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,SAG5D,CACEoL,KAAM,CACJ,CAAEjB,QAAQ,EAAgBoB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,KAAO,CAAEG,SAAU,GAAKH,MAAO,OACvF,CAAEmK,QAAQ,EAAMF,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,OACxD,CAAgBiK,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,GAAKH,MAAO,WAKlE,CAEEiL,MAAO,CACL,CACEG,KAAM,CACJ,CAAEjB,QAAQ,EAAgBoB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,KAAO,CAAEG,SAAU,EAAGH,MAAO,OACrF,CAAEmK,QAAQ,EAAMF,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,OACxD,CAAgBiK,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,SAG5D,CACEoL,KAAM,CACJ,CAAEjB,QAAQ,EAAgBoB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,KAAO,CAAEG,SAAU,EAAGH,MAAO,OACrF,CAAEmK,QAAQ,EAAMF,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,KAAO,CAAEG,SAAU,GAAKH,MAAO,OACvF,CAAgBiK,MAAO,EAAGsB,MAAO,CAAC,CAAEpL,SAAU,EAAGH,MAAO,aAQvDgb,GAAY,CACvB,CACE7Q,QAAQ,EACRF,MAAOsK,IACP9J,SAAU,CACR,CACEQ,MAAO,CACL,CACEG,KAAM,CACJ,CAAEG,MAAO,CAAC,CAAEpL,SAAU,EAAG8a,OAAQ,CAC/B,CAAEvE,KAAM,CAAC,EAAG,SAAU,EAAG,SAAUjP,MAAO,GAC1C,CAAEiP,KAAM,CAAC,EAAG,SAAU,EAAG,SAAUjP,MAAO,aAQxD,CACE0C,QAAQ,EACRF,MAAOsK,IACP9J,SAAU,CACR,CACEN,QAAQ,EACRF,MAAO,EACPgB,MAAO,CACL,CACEG,KAAM,CACJ,CAAEG,MAAO,CAAC,CAAEpL,SAAU,EAAG8a,OAAQ,CAAC,CAAEvE,KAAM,CAAC,EAAG,SAAU,EAAG,QAASjP,MAAO,SAC3E,CAAE8D,MAAO,CAAC,CAAEpL,SAAU,EAAG8a,OAAQ,CAAC,CAAEvE,KAAM,CAAC,EAAG,SAAU,EAAG,QAASjP,MAAO,eAOvF,CACE0C,QAAQ,EACRF,MAAOsK,IACP9J,SAAU,CACR,CACEN,QAAQ,EACRF,MAAO,EACPgB,MAAO,CACL,CACEG,KAAM,CACJ,CAAEG,MAAO,CAAC,CAAEpL,SAAU,EAAG8a,OAAQ,CAAC,CAAEvE,KAAM,CAAC,EAAG,SAAU,EAAG,QAASjP,MAAO,SAC3E,CAAE8D,MAAO,CAAC,CAAEpL,SAAU,EAAG8a,OAAQ,CAAC,CAAEvE,KAAM,CAAC,EAAG,SAAU,EAAG,QAASjP,MAAO,gBAS5E+K,GAAc,CACzB,CACEnK,KAAM,SACNmJ,OAAQ,EAGRC,KAAQ,EACRC,GAAQ,GACR5F,OAAQ,CACN,CACEgG,QAAS,EACTX,KAAS,IACTY,MAAS,GAEX,CACE7F,MAAS,CAAC,EAAG,EAAG,EAAG,GACnB2F,QAAS,CAAC,CAAEtE,KAAM,EAAGE,QAAS,EAAGE,QAAS,IAC1CmE,QAAS,EACTX,KAAS,IACTY,MAAS,GAEX,CACE7F,MAAS,CAAC,GAEV4F,QAAS,EACTX,KAAS,IACTY,MAAS,MAMXmJ,GAAY,CAChB,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,IACvC,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,MAAO,KAAM,KAQpCC,GAAW,CACtB5Y,OAAOL,YACLgZ,GAAUpQ,IACR,SAAChB,EAAGD,GAAJ,MACE,CAACC,EAAG,CACFsR,gBAAiBC,GAAS,CACxBhT,KAAM,CAAC,QAAS,UAAW,SAASwB,EAAM,GAC1CkL,EAAG,UACHuG,OAAM,OAAA/X,OAAU,KAAOsG,EAAMqR,GAAUlY,OAAS,GAAKkY,GAAUlY,OAAzD,gBACNuY,KAAI,OAAAhY,OAAY,KAAOsG,EAAMqR,GAAUlY,OAAS,GAAKkY,GAAUlY,OAA3D,gBACJwY,SAAS,EACTC,SAAS,EACTjB,QAAS,KAEXkB,gBAAe,OAAAnY,OAAU,IAAMsG,EAAMqR,GAAUlY,OAAhC,eACf2Y,aAAc9R,EAAM,IAAM,EAAI,MAAQ,EACtC+R,YAAa,OACbC,YAAa,QACbC,YAAa,WAIrBvZ,OAAOL,YACLgZ,GAAUpQ,IAAI,SAAAhB,GAAC,MAAI,CAACA,EAAG,CAAE4R,gBAAiB,OAAQC,aAAc,YAUvDzP,GAAQ,CACnB6P,GAAK/D,QAAY,IACjB+D,GAAK9D,SAAY,IACjB8D,GAAK7D,WAAY,IACjB6D,GAAK5D,YAAY,IACjB4D,GAAK1C,QAAY,KAGN2C,GAAQ,CACnB,CACE,CAAC,EAAEzH,IAAU,GAAI,CAAC,EAAGA,MACrB,CAAC,EAAEA,IAAU,GAAI,CAAC,EAAGA,MACrB,CAAC,EAAEA,IAAU,GAAI,CAAC,EAAGA,MACrB,CAAC,EAAEA,IAAU,GAAI,CAAC,EAAGA,MACrB,CAAC,EAAEA,IAAU,GAAI,CAAC,EAAGA,MACrB,CAAC,EAAEA,IAAU,GAAI,CAAC,EAAGA,QCjMnB0H,GAAW,CAACrc,IAAD2D,OAAAhB,OAAA2Z,GAAA,EAAA3Z,CAAUyY,KAAWlQ,IAAI0L,IAEpCoB,GAAYqE,GAAO,GACnB3I,GAAY6I,GAAeF,IAC3BvS,GAAYwN,GAAStX,GAAMgY,GAAfV,CAA0B5D,GAASK,SAAS,IACxD9K,GAAYyK,GAASzK,OAE3BhI,OAAOqV,GAAK5C,GAEZ,IAAM8I,GAAU,CACdzT,IDvBiB,ICwBjB9E,ID5BU,qDC6BVjE,QACAgY,aACAtE,YACAzK,QACAa,SACAqO,mBAAoBvF,GACpBA,eACA6J,QDyHqB,CACrB,CAAC,KACD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MC1H1BnQ,SACA8P,SACAb,YACAmB,ODqJoB,CACpB,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAC7D,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/B,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,QCrJ7BC,GAAQC,aJmBZ,SAAC5a,EAADyJ,GAAA,IAAUhD,EAAVgD,EAAUhD,KAAMoU,EAAhBpR,EAAgBoR,QAAhB,OAGEvS,YAGE0D,YAAU8O,KAAU/E,GAAStP,IAL/B,CAMEzG,EAAO6a,IIxBXL,GACAvb,OAAO8b,8BAAgC9b,OAAO8b,gCAGhD9b,OAAO0b,MAAUA,GACjB1b,OAAOub,QAAUA,GACFG,gBC5CbK,IAASC,OACP9U,EAAAC,EAAAC,cAAC6U,EAAA,EAAD,CAAUP,MAAQA,IAChBxU,EAAAC,EAAAC,cAAC8U,GAAD,OAGFC,SAASC,eAAe,S3BIb,WACb,GAA6C,kBAAmB9b,UAAW,CAGzE,GADkB,IAAI+b,IAAIC,IAAwBtc,OAAOC,UAC3Csc,SAAWvc,OAAOC,SAASsc,OAIvC,OAGFvc,OAAOgH,iBAAiB,OAAQ,WAC9B,IAAM3G,EAAK,GAAAqC,OAAM4Z,IAAN,sBAEPxc,EAwCV,SAAiCO,GAE/Bmc,MAAMnc,GACHI,KAAK,SAAAgc,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ9Z,IAAI,gBAAgB+Z,QAAQ,cAG7Ctc,UAAUC,cAAcsc,MAAMpc,KAAK,SAAAC,GACjCA,EAAaoc,aAAarc,KAAK,WAC7BT,OAAOC,SAAS8c,aAKpB3c,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEA5DA8b,CAAwB3c,GAGxBD,EAAgBC,M2BtBtB4c","file":"static/js/main.e64bf53a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"styles_grid__2gUZc\",\"section\":\"styles_section__1nI3P\",\"line\":\"styles_line__1aRAz\",\"bar\":\"styles_bar__FT4F-\",\"chord\":\"styles_chord__30vgH\",\"chords\":\"styles_chords__2UM3J\",\"name\":\"styles_name__30gGj\",\"duration\":\"styles_duration__26oXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guitar\":\"styles_guitar__2tpMb\",\"piano\":\"styles_piano__3g1wm\",\"open\":\"styles_open__2YvvH\",\"boxes\":\"styles_boxes__1kIun\",\"layer\":\"styles_layer__1qXk6\",\"string\":\"styles_string__16y2r\",\"box\":\"styles_box__1LYaj\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  merge,\n  reduce,\n} from 'ramda'\n\n//** Logs scoped arguments and own argument and returns own argument\n//:: (...args) -> arg -> arg\nconst debug =\n  (...args) =>\n    arg =>\n      console.log(...args, arg) || arg\n\n// Retuns an object from entries ([[key, val], ...])\n//:: Array entries -> Object o\nconst fromEntries =\n  reduce(\n    (o, [key, val]) =>\n      merge(o, { [key]: val }),\n    {}\n  )\n\n//--\n//   Patches\n//--\nObject.fromEntries = fromEntries\nwindow.__D = debug\n","import {\n  addIndex,\n  all,\n  append,\n  call,\n  clone,\n  compose as c,\n  equals,\n  map,\n  prop,\n  reduce,\n  when,\n} from 'ramda'\n\n// Ideas:\n// goto(cursor, fn): with fn cleaning the nexts buffer\n// (would allow state serialization)\n// (remove accumulator)\n\nexport default\n  (slice, initialAccumulator) =>\n    (iterators) => {\n      let iterator\n      let nexts = Array(iterators.length)\n      let accumulator = clone(initialAccumulator)\n\n      const update = addIndex(map)((next, i) => when(_ => !_, iterators[i].next, next))\n\n      const set = ([sliced, acc]) =>\n        ((values, cursors) => ((\n          [values, nexts] = reduce(\n            ([values, nexts], [value, next]) => [\n              append(when(_ => !!_, prop('value'))(value), values),\n              append(next, nexts),\n            ],\n            [[], []],\n            sliced\n          ),\n          accumulator = acc,\n          { value: { values, ...accumulator } }\n        )))()\n\n      return (iterator = {\n        reset: () => ((\n          iterators   = map(c(call, prop('reset')))(iterators),\n          accumulator = clone(initialAccumulator),\n          iterator\n        )),\n        cursor: () => map(c(call, prop('cursor')))(iterators),\n        next: () => {\n          nexts = update(nexts)\n          const isDone = c(all(equals(true)), map(prop('done')))(nexts)\n\n          return isDone ? { done: true }\n                        : c(set, slice)(nexts, accumulator)\n        }\n      })\n    }\n","import { reduce } from './Tree'\nimport {\n  adjust,\n  append,\n  compose as c,\n  converge,\n  evolve,\n  init,\n  last,\n  merge,\n  path,\n  when,\n} from 'ramda'\n\n/**\n * Pops last arr element into before last's last repeat key,\n * merged with count\n * @kind Number count -> Array arr -> Array arr\n */\nconst popGroup =\n  (endIndex, count) =>\n    converge(\n      adjust(-1), // adjust last\n      [\n        c(        // with push last(arr) into repeat\n          last => evolve({ repeat: c(append, merge(last))({ endIndex, count }) }),\n          last\n        ),\n        init      // of init(arr) with\n      ]\n    )\n\n/**\n * Push an item into the arr's last element's repeat key\n * @kind Item item -> Array arr -> Array arr\n */\nconst pushItem =\n  item =>\n    adjust(\n      -1,\n      evolve({ repeat: append(item) })\n    )\n\n/**\n * Append a group with index\n * @kind Object index -> Array arr -> Array arr\n */\nconst pushGroup =\n  startIndex =>\n    append({ startIndex, count: 1, repeat: [] })\n\n/**\n * Transforms a tree marked with repeat and count\n * to a multidimensionnal array as recursive repeat sections\n * @kind Tree tree -> GroupedArray grouped\n */\nexport default\n  (\n    get, // (item, index) -> [items]: returns item's children\n    is,  // (item, index) -> Boolean: returns true if item has to be pushed in group\n  ) =>\n    (\n      tree, // Tree to group by repeat sections\n    ) =>\n      c(\n        path([0, 'repeat', 0]),\n        reduce(\n          // Before\n          // Make new level when repeating,\n          // add item if it has data\n          (grouped, item, index) =>\n            c(\n              when(_ => is(item, index), pushItem(merge({ index }, item))),\n              when(_ => item.repeat    , pushGroup(index)),\n            )(grouped),\n\n          // After\n          // Close repeating\n          (grouped, { count }, index) =>\n            when(_ => count, popGroup(index, count))(grouped),\n\n          // Get\n          get,\n        )\n      )(\n        [{ repeat: [] }],                        // Accumulator: stack of children\n        merge({ repeat: true, count: 1 }, tree), // Tree to group\n                                                // (making sure there is a top level repeat)\n      )\n","import React, {\n  useCallback as cb,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\n/* import styles      from './styles.module.scss' */\n\nexport default ({\n  src,\n  $audio    = useRef(),\n  $volume   = useRef(),\n  play      = false,\n  loop      = true,\n  volume    = 1,\n  onPlay    = () => null,\n  onPause   = () => null,\n  onRestart = () => null,\n  onStop    = () => null,\n  onLoop    = () => null,\n  onUnloop  = () => null,\n  onVolume  = () => null,\n}) => {\n  const [_play, setPlay] = useState(play)\n  const [_loop, setLoop] = useState(loop)\n  const [_volume, setVolume] = useState(volume)\n  const [_stopped, setStopped] = useState(!play) // To force rerender when restart\n\n  const __play    =  ()       => (( $audio.current.play()           ))\n  const __pause   =  ()       => (( $audio.current.pause()          ))\n  const __restart =  ()       => (( $audio.current.currentTime = 0  ))\n  const __stop    =  ()       => (( __pause(), __restart()          ))\n  const __loop    =  ()       => (( $audio.current.loop    = true   ))\n  const __unloop  =  ()       => (( $audio.current.loop    = false  ))\n  const __volume  =  (volume) => (( $volume.current.volume = volume ))\n\n  const handlePlay    = cb((e) => (( __play   (), setPlay(true), setStopped(false), onPlay   (e) )))\n  const handlePause   = cb((e) => (( __pause  (), setPlay(false)                  , onPause  (e) )))\n  const handleRestart = cb((e) => (( __restart(), setStopped(!play)               , onRestart(e) )))\n  const handleStop    = cb((e) => (( __stop   (), setPlay(false), setStopped(true), onStop   (e) )))\n  const handleLoop    = cb((e) => (( __loop   (), setLoop(true)                   , onLoop   (e) )))\n  const handleUnloop  = cb((e) => (( __unloop (), setLoop(false)                  , onUnloop (e) )))\n  const handleVolume  = cb((e) => ((v = e.target.value) =>\n                                  (( __volume(v), setVolume(v)                    , onVolume (e) )))())\n\n  const handleEnd = (e) => _loop ? handleRestart() : handleStop()\n\n  useEffect(($ = $audio.current) => ((\n    _play ? $.play() : $.pause(),\n    $.volume = _volume,\n    $.addEventListener('ended', handleEnd),\n    () => $.removeEventListener('ended', handleEnd)\n  )))\n\n  return (\n    <>\n      <audio src={ src } ref={ $audio } />\n      <div>\n        { _play ? (\n          <button onClick={ handlePause }>Pause</button>\n        ) : (\n          <button onClick={ handlePlay }>Play</button>\n        )}\n        { _stopped || (\n          <>\n            <button onClick={ handleStop    }>Stop</button>\n            <button onClick={ handleRestart }>Restart</button>\n          </>\n        ) }\n      </div>\n      <div>\n        { _loop ? (\n          <button onClick={ handleUnloop }>Unloop</button>\n        ) : (\n          <button onClick={ handleLoop }>Loop</button>\n        )}\n      </div>\n      <div>\n        <input\n          type=\"range\" min=\"0\" max=\"1\" step=\"0.01\"\n          value   ={ _volume      }\n          onChange={ handleVolume }\n          ref     ={ $volume      }\n        />\n      </div>\n    </>\n  )\n}\n","import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport { connect } from 'react-redux'\nimport Audio       from './Audio'\n\nexport default connect(\n  state => {\n    const { bpm, next: { value, done } } = state\n    const time = done ? null : value.time * 60 / bpm\n\n    return { ...state, time }\n  },\n  {\n    onTime   : () => ({ type: 'next'  }),\n    onRestart: () => ({ type: 'reset' }),\n    onStop   : () => ({ type: 'init'  }),\n  }\n)(\n  ({ src, time, onTime, onRestart, onStop: _onStop }) => {\n    const $audio          = useRef()\n    const [play, setPlay] = useState(false)\n\n    const onPlay    = useCallback(() => setPlay(true))\n    const onPause   = useCallback(() => setPlay(false))\n    const onStop    = useCallback(() => ((setPlay(false), _onStop())))\n\n    let id\n    const raf = () => id = requestAnimationFrame(\n      () => $audio.current.currentTime < time\n        ? raf()\n        : onTime(time)\n    )\n\n    useEffect(() => ((\n      time = parseFloat(time),\n      play && !isNaN(time) && raf(),\n      () => cancelAnimationFrame(id)\n    )))\n\n    return (\n      <>\n        <Audio { ...{\n          $audio,\n          src,\n          play,\n          onPlay,\n          onPause,\n          onRestart,\n          onStop,\n        } } />\n      </>\n    )\n  }\n)\n","import React       from 'react'\nimport { connect } from 'react-redux'\nimport styles      from './styles.module.scss'\nimport {\n  addIndex,\n  reduce,\n  find,\n} from 'ramda'\n\nconst is = (index, current) =>\n  addIndex(reduce)(\n    (highlight, ind, i) => highlight && (index[i] === ind),\n    true,\n    current\n  )\n\nconst highlight = (index, current) => is(index, current) ? '' : null\n\nconst getCount = (repeats, current) =>\n  ((repeat = find(\n      ({ endIndex }) => is(endIndex, current),\n      repeats\n  )) =>\n    repeat && repeat.count\n  )()\n\nconst Repeat = ({ repeats, current, count }) =>\n  count > 1 && (\n    <repeat>\n      { ((c = getCount(repeats, current)) =>\n        c && (<span>({ c })</span>)\n      )() }\n      <span>{ `x${ count }` }</span>\n    </repeat>\n  )\n\nexport default connect(\n  state => state,\n)(\n  ({ grid: { sections, count }, index: { index = [], repeats } }) => (\n    <grid className={ styles.grid }>\n\n      { sections.map(({ name, lines, count }, s) => (\n        <section\n          key={ s }\n          className={ styles.section }\n          highlight={ highlight(index, [s]) }\n        >\n          { name && (\n            <name>{ name }</name>\n          )}\n          <Repeat repeats={ repeats } current={ [s] } count={ count }></Repeat>\n\n        { lines.map((line, l) => (\n            <line\n              key={ l }\n              className={ styles.line }\n              highlight={ highlight(index, [s, l]) }\n            >\n\n            { line.bars.map(({ repeat, count, items }, b) => (\n                <bar\n                  key={ b }\n                  className={ styles.bar }\n                  start={ repeat ? '' : null }\n                  end={ count > 1 ? '' : null }\n                  highlight={ highlight(index, [s, l, b]) }\n                >\n\n                  <chords className={ styles.chords }>\n                    { items.map(({ chord, duration }, i) => (\n                      <chord\n                        className={ styles.chord }\n                        style={{ flexGrow: duration }}\n                        key={ i }\n                        highlight={ highlight(index, [s, l, b, i]) }\n                      >\n                        <name className={ styles.name }>{ chord }</name>\n                        <duration className={ styles.duration } duration={ duration }></duration>\n                      </chord>\n                    )) }\n                  </chords>\n\n                  <Repeat repeats={ repeats } current={ [s, l, b] } count={ count }></Repeat>\n                </bar>\n              )) }\n\n            </line>\n          )) }\n\n        </section>\n      )) }\n\n    </grid>\n  )\n)\n","import React  from 'react'\nimport styles from './styles.module.scss'\n\nexport const GUITAR = 'guitar'\nexport const PIANO  = 'piano'\n\nexport default\n  ({ type, open, layers }) => (\n    <instrument className={ [styles[type], open ? styles.open : ''].join(' ') }>\n\n      { layers.map((strings, key) => (\n        <layer className={ styles.layer } key={ key }>\n\n          { strings.map((boxes, key) => (\n            <string className={ styles.string } key={ key }>\n\n              { boxes.map(({ clips = [null], style = {} } = {}, key) => (\n                <boxes className={ styles.boxes } key={ key }>\n\n                  { clips.map((clipPath, key) => (\n                    <box\n                      key      ={ key }\n                      className={ styles.box }\n                      style    ={{ clipPath, ...style }}\n                    />\n                  )) }\n\n                </boxes>\n              )) }\n\n            </string>\n          )) }\n\n        </layer>\n      )) }\n\n    </instrument>\n  )\n","import {\n  compose,\n  is,\n  map,\n  mapObjIndexed,\n} from 'ramda'\n\nconst mapObj = fn => mapObjIndexed((value, key) => fn(key)(value))\n\nconst denormalizeValue =\n  (data, map) =>\n    (key) =>\n      (value) =>\n        is(Array , value)          ? denormalizeArray (data, map)(key)(value)\n      : is(Object, value)          ? denormalizeObject(data, map)(value)\n      : map[key] && data[map[key]] ? data[map[key]][value]\n      : data[key]                  ? data[key][value]\n                                   : value\n\nconst denormalizeArray =\n  (data, m) =>\n    compose(map, denormalizeValue(data, m))\n\nconst denormalizeObject =\n  (data, map = {}) =>\n    mapObj(denormalizeValue(data, map))\n\nexport default denormalizeObject\n","import {\n  T,\n  and,\n  any,\n  apply,\n  call,\n  compose,\n  defaultTo,\n  gte,\n  length,\n  lte,\n  prop,\n  ifElse,\n  zipWith,\n} from 'ramda'\n\n//--\n//   A pair is an Array Number\n//   A mask is an Array Array Pair, with\n//\n//   Specifically, it is a collection of [lower, upper] pair list\n//\n//   A number is inside a pair\n//   if it satisfies:\n//   lower <= number <= upper\n//\n//   A number is inside a pair list\n//   if it is inside at least one of the pairs\n\n//   A pair of numbers (i, j) are inside the mask\n//   if j is inside the ith pair list\n//\n//   +/-Infinity are valid bounds\n//\n//   @example [\n//     [[-Infinity, Infinity]],\n//     [[1, 3], [7, 9], [13, 15]]\n//   ]\n//--\n\n//** Returns wether i is in pair\n//:: Number i, Pair pair -> Boolean inside\nconst insidePair =\n  i =>\n    compose(\n      apply(and),  // both\n      zipWith(\n        call,\n        [\n          gte(i),  // i >= lower bound\n          lte(i)   // i <= upper bound\n        ]\n      )\n    )\n\n//** Returns wether i is in at least one of the pairs\n//:: Number i -> Array Pair pairs -> Boolean inside\nconst insidePairs =\n  i =>\n    any(insidePair(i))\n\n//** Returns wether j is in mask's ith pair list\n//:: Number i, Number j, Mask mask -> Boolean inside\nconst inside =\n  i =>\n    j =>\n      ({ mask, offsetI = 0, offsetJ = 0 }) =>\n        compose(insidePairs(j - offsetJ), defaultTo([]), prop(i - offsetI))(mask)\n\n//** Returns wether j is in any masks's ith pair list\n//:: Number i -> Number j -> Array masks -> Boolean inside\nconst insideAny =\n  i =>\n    j =>\n      compose(ifElse(length, any(inside(i)(j)), T), defaultTo([]))\n\nexport default {\n  inside,\n  insideAny,\n}\n","import {\n  add as plus,\n  compose,\n  curry,\n  invertObj,\n  mathMod,\n  uncurryN,\n} from 'ramda'\n\n//--\n//   Mixin for Note and Interval\n//\n//   @see ./Note.js, ./Interval.js\n//--\n\n//** Number of notes in octave\n//:: Number\nconst N = 12\n\nexport default VALUES => {\n  //** Name to value mapping\n  //:: Object Number\n  // VALUES\n\n  //** Value to name mapping\n  //   (last name found in VALUES for value is prefered)\n  //:: Array String\n  const NAMES = invertObj(VALUES)\n\n  //** Returns name of value\n  //:: Number value -> String name\n  const name =\n    value =>\n      NAMES[mathMod(value, N)]\n\n  //** Returns value of name\n  //:: String name -> Number value\n  const value =\n    name =>\n      VALUES[name]\n\n  //** Returns name of name + value\n  //:: Number value -> String name -> String newName\n  const add = curry(uncurryN(2,\n    v =>\n      compose(\n        name,    // get name of\n        plus(v), // value plus\n        value    // name's value\n      )\n  ))\n\n  return {\n    VALUES,\n    NAMES,\n    name,\n    value,\n    add,\n  }\n}\n\n","import base from './base'\n\n//--\n//   A note is a String denoting its name\n//   in the form: A|B|C|D|E|F|G[b|#]\n//\n//   Its value is the corresponding number\n//   of semitone(s) for name\n//\n//   @examples 'C', 'G#', 'Bb'\n//\n//   @see ./base.js\n//--\n\nconst Note = base({\n  'Cb': 11, 'C':  0, 'C#':  1,\n  'Db':  1, 'D':  2, 'D#':  3,\n  'Eb':  3, 'E':  4, 'E#':  5,\n  'Fb':  4, 'F':  5, 'F#':  6,\n  'Gb':  6, 'G':  7, 'G#':  8,\n  'Ab':  8, 'A':  9, 'A#': 10,\n  'Bb': 10, 'B': 11, 'B#':  0,\n})\n\nexport default Note\n","import base from './base'\n\n//--\n//   An interval is a String denoting its name\n//   in the form: 1|2|3|4|5|6|7[bb|b|#]\n//\n//   Its value is the corresponding number\n//   of semitone(s) for name\n//\n//   @examples '1', '#2', 'bb7'\n//\n//   @see ./base.js\n//--\n\nconst Interval = base({\n                      '1':  0,\n            'b2':  1, '2':  2, '#2': 3,\n            'b3':  3, '3':  4,\n            'b4':  4, '4':  5, '#4': 6,\n            'b5':  6, '5':  7, '#5': 8,\n            'b6':  8, '6':  9,\n  'bb7': 9, 'b7': 10, '7': 11,\n})\n\nexport default Interval\n","import Note     from './Note'\nimport Interval from './Interval'\nimport {\n  __,\n  compose,\n  equals,\n  find,\n  map,\n} from 'ramda'\n\n//--\n//   A scale is an Array Interval\n//\n//   @example ['1', '2', 'b3', '4', '5', 'b6', 'b7']\n//\n//   @see ./Interval.js\n//--\n\n//** Returns notes of intervals to root\n//:: String root -> Array String intervals -> Array String notes\nconst notes =\n  root =>\n    map(                    // for each interval\n      compose(\n        Note.add(__, root), // add to root the\n        Interval.value      // interval's value\n      )\n    )\n\n//** Returns interval from intervals which gives note to root\n//   or undefined when note is not in scale with root\n//:: String root -> String note -> Scale scale -> String? interval\nconst getInterval =\n  root =>\n    note =>\n      find(                         // first scale's interval where\n        compose(\n          equals(Note.value(note)), // note's value equals\n          Note.value,               // value of\n          Note.add(__, root),       // root plus\n          Interval.value            // interval's value\n        )\n      )\n\nexport default {\n  notes,\n  getInterval,\n}\n","import denormalize from '../../lib/utils/denormalize'\nimport { GUITAR }  from '../Instrument'\nimport Mask        from '../../lib/mask'\nimport {\n  Note,\n  Scale,\n} from '../../lib/music'\nimport {\n  addIndex,\n  compose as c,\n  map,\n  range,\n  reverse,\n} from 'ramda'\n\nconst toArray =\n  ({ tuning, from, to, layers }) =>\n    ((frets = range(from, to + 1)) =>\n      map(\n        ({ clips, masking, palette, root, scale }) =>\n          addIndex(map)(\n            (open, string) =>\n              map(\n                (fret) =>\n                  Mask.insideAny(string)(from + fret)(masking)\n                    ? ((note = Note.add(fret)(open)) => ({\n                        clips,\n                        style: palette[Scale.getInterval(root)(note)(scale)]\n                      }))()\n                    : {},\n                frets\n              ),\n            reverse(tuning)\n          ),\n        layers\n      )\n    )()\n\nexport default\n  (state) =>\n    (instrument) =>\n      (({ type, from } = instrument) =>\n        ({\n          type,\n          open  : type === GUITAR && from === 0,\n          layers: c(\n            toArray,\n            denormalize(state, {\n              tuning : 'tunings',\n              clip   : 'clips',\n              mask   : 'masks',\n              palette: 'palettes',\n              scale  : 'scales',\n            })\n          )(instrument)\n        })\n      )()\n","import React       from 'react'\nimport { connect } from 'react-redux'\nimport Instrument  from '../Instrument'\nimport toArray from './toArray'\n// import styles from './styles.module.scss'\nimport {\n  evolve,\n  map,\n} from 'ramda'\n\nexport default connect(\n  (state) =>\n    evolve({\n      instruments: map(toArray(state))\n    })(state)\n)(\n  ({ instruments }) => (\n    <>\n      { instruments.map((instrument, key) =>\n        <Instrument key={ key } { ...instrument } />\n      )}\n    </>\n  )\n)\n","import React, {\n} from 'react'\nimport { connect }    from 'react-redux'\nimport Player         from './Player'\nimport Grid           from './Grid'\nimport InstrumentList from './InstrumentList'\n\nexport default connect()(\n  () => {\n    return (\n      <>\n        <Player />\n        <Grid />\n        <InstrumentList />\n      </>\n    )\n  }\n)\n","// @flow\nimport type {\n  Accumulator,\n  Reducer,\n  Getter,\n} from './Tree.types'\nimport {\n  addIndex,\n  append,\n  reduce as r,\n} from 'ramda'\n\n/**\n * Reduces a tree recursively to its children,\n * applying at each level a callback before and after the reducer,\n * traversing top to bottom, left to right\n * @kind Reducer before, Reducer after, Getter get ->\n *         Accumulator acc, Tree tree, ?number[] index ->\n *           Accumulator acc\n */\nexport const reduce: (Reducer, Reducer, Getter) => Reducer =\n  (\n    before: Reducer, // A function to call before the reducer\n    after : Reducer, // A function to call after  the reducer\n    get   : Getter,  // A function getting the children\n  ): Reducer =>\n    (\n      acc  : Accumulator,   // The initial (or current) accumulator\n      tree : Tree,          // The initial (or current) tree to reduce\n      index: ?number[] = [] // The initial (or current) index\n    ): Accumulator =>\n      ((\n        children: Tree[],      // tree's children\n        acc     : Accumulator, // accumulator after applying before function\n        reducer : Reducer,     // recursive reducer\n      ): Accumulator =>\n        ((\n          acc: Accumulator // accumulator after reduce\n        ): Accumulator =>\n          // Apply after function\n          after(acc, tree, index)\n        )(\n          children\n            // reduce trees (recursively)\n            ? addIndex(r)(\n              (acc, tree, i) =>\n                // Append current index to index\n                reducer(acc, tree, append(i, index)),\n              acc,\n              children\n            )\n            // nothing to reduce\n            : acc\n        )\n      )(\n        get(tree, index),          // retrieving children\n        before(acc, tree, index),  // applying before on\n        reduce(before, after, get) // initialyzing reducer\n      )\n\nexport default {\n  reduce,\n}\n","// RepeatableArray = { count: Number, repeat: Array }\nimport {\n  clamp,\n  clone,\n} from 'ramda'\n\n/**\n * Iterates over repeat, count times\n * @kind RepeatableArray ra -> Iterator iterator\n */\nexport default ({ count = 1, repeat = [] }) => {\n  let   iterator\n  const bounds = {\n    min: {\n      index: -1,\n      count:  1\n    },\n    max: {\n      index: repeat.length - 1,\n      count\n    }\n  }\n\n  const forward = () => ++cursor.index                        // Increments index\n  const start   = () => ((cursor.index = -1, ++cursor.count)) // Increments count and resets index\n  const get     = () => repeat[cursor.index]                  // Returns current value\n\n  const moveForward = () => ((forward(), { value: get() }))   // Retuns current value and forwards\n  const moveStart   = () => ((start(), moveForward()))        // Loops, return current value and forwards\n\n  /**\n   * Cursor\n   * @kind { index: Number, count: Number }\n   */\n  const cursor = clone(bounds.min)\n\n  /**\n   * Iterator\n   * @kind Object\n   */\n  return (iterator = {\n    /**\n     * Returns cursor\n     * @kind () => Cursor cursor\n     */\n    cursor: () => clone(cursor),\n    /**\n     * Moves cursor to ith item, cth repeat\n     * @kind Number i, Number c -> Iterator iterator\n     */\n    goto: ({ index = bounds.min.index, count = bounds.min.count } = {}) => ((\n      cursor.index = clamp(bounds.min.index, bounds.max.index, index),\n      cursor.count = clamp(bounds.min.count, bounds.max.count, count),\n      iterator\n    )),\n    /**\n     * Returns current value in array,\n     * and move cursor to next value\n     * @kind () -> Object { value, done }\n     */\n    next: () => {\n      const canForward = cursor.index < bounds.max.index\n      const canRepeat  = cursor.count < bounds.max.count\n      const isDone     = !canForward && !canRepeat\n\n      return isDone     ? { done: true }\n           : canForward ? moveForward()\n                        : moveStart()\n    },\n  })\n}\n","import groupIterator from './GroupIterator'\nimport mergeIterator from './MergeIterator'\nimport {\n  assocPath,\n  compose as c,\n  cond,\n  equals,\n  evolve,\n  juxt,\n  lt,\n  map,\n  min,\n  pathOr,\n  prop,\n  reduce,\n} from 'ramda'\n\nconst isDone      = c(equals(true), prop('done'))\nconst getDuration = pathOr(Infinity, ['value', 'duration'])\nconst minDuration = c(reduce(min, Infinity), map(getDuration))\nconst longerThan  = at => c(lt(at), getDuration)\n\nconst _slice =\n  at =>\n    juxt([\n      assocPath(['value', 'duration'], at),\n      evolve({ value: { duration: d => d - at } })\n    ])\n\nconst slice =\n  at =>\n    cond([\n      [isDone        , _ => []   ],\n      [longerThan(at), _slice(at)],\n      [_ => true     , _ => [_]  ],\n    ])\n\nconst sliceNexts =\n  (nexts, { time, end }) =>\n    ((values, duration = minDuration(nexts)) =>\n      [map(slice(duration))(nexts), { time: end, end: end + duration }])()\n\nexport default c(\n  mergeIterator(sliceNexts, { time: 0, end: 0 }),\n  map(groupIterator)\n)\n","import ArrayIterator from './ArrayIterator'\nimport {\n  append,\n  call,\n  clone,\n  compose as c,\n  last,\n  map,\n  prop,\n  reduce,\n  reduced,\n} from 'ramda'\n\n// Group = RecursiveRepeatableArray = { count: Number, repeat: Group[] }\n\n// Cursor = { index, repeat }[]\n// A path to the position of the element\n// to be returned by the next call to next\n// @example\n//   const group = { repeat: [1, { repeat: [2, 3] }] }\n//   const value = iterator(group).goto([{ index: 1 }, { index: 0 }]).next()\n//   // value === 2\n\n/**\n * Iterates over a group\n * @kind Group group -> Iterator iterator\n */\nexport default ({ count = 1, repeat = [] }) => {\n  let iterator\n  let stack  = [ArrayIterator({ count, repeat })]\n  let cursor = []\n\n  const getCursor = () => cursor = map(c(call, prop('cursor')))(stack)\n\n  const pop  = ()    => ((stack.pop()                     , iterator.next()))\n  const push = value => ((stack.push(ArrayIterator(value)), iterator.next()))\n\n  return (iterator = {\n    /**\n     * Returns cursor\n     * @kind () => Cursor cursor\n     */\n    cursor: () => clone(cursor),\n    /**\n     * Resets iterator\n     * @kind () -> Iterator iterator\n     */\n    reset: () => ((iterator.goto(), iterator)),\n    /**\n     * Moves cursor\n     * @kind Cursor cursor -> Iterator iterator\n     */\n    goto: (cursor = [])=> ((\n      // Redo corresponding stack\n      stack = c(\n        prop('stack'),\n        reduce(\n          (\n            { stack, current },\n            cursor,\n            iterator = ArrayIterator(current).goto(cursor),\n            index    = iterator.cursor().index\n          ) =>\n            current.repeat\n              ? ({\n                stack: append(iterator)(stack), // append array iterator moved to the given index & repeat\n                current: current.repeat[index], // new current is indexth child of old current\n              })\n              : reduced({ stack, current }),    // cannot go further\n          { stack: [], current: { count, repeat } }\n        )\n      )(cursor.length ? cursor : [{}]),\n      // Refresh cursor\n      getCursor(),\n      // Return iterator\n      iterator\n    )),\n    /**\n     * Returns current value in group,\n     * and move cursor to next value\n     * @kind () -> Object { value, done }\n     */\n    next: () => {\n      const it = last(stack)\n      if (!it) return { done: true }\n\n      let { value, done } = it.next()\n      const recursive     = value && value.count && value.repeat\n\n      return done      ? pop()\n           : recursive ? push(value)\n                       : ((getCursor(), { value }))\n    },\n  })\n}\n","import _group         from './utils/group'\nimport groupIterator  from './utils/GroupIterator'\nimport groupsIterator from './utils/GroupsIterator'\nimport {\n  append,\n  compose as c,\n  reduce,\n} from 'ramda'\n\nexport const group = _group(\n  (item, index) => item[['sections', 'lines', 'bars', 'items'][index.length]],\n  (item, index) => index.length === 4\n)\n\nexport const getIndex =\n  (grid, current = group(grid)) =>\n    c(\n      ({ current: { index = [] } = {}, repeats }) => ({ index, repeats }),\n      reduce(\n        ({ current: { startIndex, endIndex, repeat }, repeats }, { index, count }) => ({\n          current: repeat[index],\n          repeats: append({ startIndex, endIndex, count }, repeats),\n        }),\n        { current, repeats: [] },\n      )\n    )\n\nexport {\n  groupIterator,\n  groupsIterator,\n}\n","// import { cleanNilsRecurs } from '../lib/utils'\nimport { getIndex } from '../lib/grid'\nimport {\n  assocPath,\n  compose as c,\n  defaultTo,\n  filter,\n  identity,\n  map,\n  prop,\n  reduce,\n  tail,\n  unnest,\n} from 'ramda'\n\n//--\n//   Utils\n//--\n\n//** Returns state with actions applied\n//:: Object state -> Array actions -> Object state\nconst assocPathReduce =\n  reduce(\n    (state, { path, value }) =>\n      assocPath(path, value, state)\n  )\n\nconst getEvents = c(\n  unnest,\n  filter(_ => _),\n  map(prop('events')),\n  tail,\n  prop('values'),\n)\n\n//--\n//   Reducers\n//--\n\n//** Reducers keyed by action type\n//:: Object String actionType Function reducer\nconst reducers = {\n  next: (state) => ((\n    { grid, gridGroup, iterator, next: { value, done }, instruments: instrs } = state,\n    cursor      = iterator.cursor()[0],\n    index       = getIndex(grid, gridGroup)(cursor),\n    next        = iterator.next(),\n    instruments = assocPathReduce(instrs, getEvents(value)),\n  ) =>\n    done ? state : ({ ...state, index, next, instruments }))(),\n  init: (state) => ((\n    { grid, gridGroup, iterator, initialInstruments } = state,\n    cursor      = iterator.reset().cursor()[0],\n    index       = getIndex(grid, gridGroup)(cursor),\n    next        = iterator.next(),\n    instruments = initialInstruments,\n  ) =>\n    ({ ...state, next, index, instruments }))(),\n  reset: (state) =>\n    (({ next, init } = reducers) =>\n      c(next, init)(state))(),\n}\n\n//** Reduces state with action\n//:: (Object state, Object action) -> Object state\nexport default\n  (state, { type, payload }) =>\n    // defaultTo(identity, reducers[type])(state, payload)\n    // console.log('reducing', type, payload, state) ||\n    c(\n      // window.__D('-> state'),\n      // _ => console.log('reduced', JSON.stringify(_)) || _,\n      defaultTo(identity, reducers[type]),\n    )(state, payload)\n","import {\n  ap,\n  compose,\n  map,\n  mergeAll,\n  values,\n} from 'ramda'\n\nconst topLeft     = s => [0, 0]              // Top    left  point\nconst topRight    = s => [1, 0]              // Top    right point\nconst bottomLeft  = s => [0, 1]              // Bottom left  point\nconst bottomRight = s => [1, 1]              // Bottom right point\nconst top         = s => [s, 0]              // Top    border\nconst bottom      = s => [s, 1]              // Bottom border\nconst left        = s => [0, s]              // Left   border\nconst right       = s => [1, s]              // Right  border\nconst oTop        = s => top   (1 - s)       // Top    border (from right )\nconst oBottom     = s => bottom(1 - s)       // Bottom border (from right )\nconst oLeft       = s => left  (1 - s)       // Left   border (from bottom)\nconst oRight      = s => right (1 - s)       // Right  border (from bottom)\nconst rTop        = s => top   ((1 + s) / 2) // Top    border (right  of center)\nconst rBottom     = s => bottom((1 + s) / 2) // Bottom border (right  of center)\nconst bLeft       = s => left  ((1 + s) / 2) // Left   border (bottom of center)\nconst bRight      = s => right ((1 + s) / 2) // Right  border (bottom of center)\nconst lTop        = s => top   ((1 - s) / 2) // Top    border (left   of center)\nconst lBottom     = s => bottom((1 - s) / 2) // Bottom border (left   of center)\nconst tLeft       = s => left  ((1 - s) / 2) // Left   border (top    of center)\nconst tRight      = s => right ((1 - s) / 2) // Right  border (top    of center)\n\nconst Rectangle = {\n  top       : [ topLeft    ,  topRight   ,  right   ,  left  ],\n  bottom    : [ bottomRight,  bottomLeft , oLeft    , oRight ],\n  left      : [ topLeft    ,  bottomLeft ,  bottom  ,  top   ],\n  right     : [ topRight   ,  bottomRight, oBottom  , oTop   ],\n  vertical  : [rTop        , rBottom     , lBottom  , lTop   ],\n  horizontal: [tLeft       , tRight      , bRight   , bLeft  ],\n}\n\nconst Diagonal = {\n  asc : [topRight, right ,  bottom, bottomLeft , oLeft  , oTop ],\n  desc: [topLeft , top   , oRight , bottomRight, oBottom,  left],\n}\n\nconst Triangle = {\n  topLeft    : [topLeft    ,  top   , left  ],\n  topRight   : [topRight   , oTop   , right ],\n  bottomLeft : [bottomLeft , oBottom, oLeft ],\n  bottomRight: [bottomRight,  bottom, oRight],\n}\n\nconst v  = s => [1/2, s  ] // Vertical\nconst h  = s => [s  , 1/2] // Horizontal\nconst d1 = s => v(s - 1/2) // Diamond point 1\nconst d2 = s => h(3/2 - s) // Diamond point 2\nconst d3 = s => v(3/2 - s) // Diamond point 3\nconst d4 = s => h(s - 1/2) // Diamond point 4\nconst Diamond = {\n  diamond: [d1, d2, d3, d4],\n}\n\nconst toString = poly =>\n  'polygon('\n  + poly.map(pt => pt.map(c => c * 100 + '%').join(' ')).join(',')\n  + ')'\nconst mergeObj = compose(mergeAll, values)\nconst evolve   = map(_ => compose(toString, ap(_), _ => [_]))\n\nexport default compose(evolve, mergeObj)({\n  Rectangle,\n  Diagonal,\n  Triangle,\n  Diamond,\n})\n","import textures from 'textures'\n\nconst xmlns = 'http://www.w3.org/2000/svg'\n\nclass DOM {\n  constructor(tag = '', attrs = {}, children = []) {\n    this.tag      = tag\n    this.attrs    = attrs\n    this.children = children\n  }\n\n  append(tag) {\n    const child = new DOM(tag)\n    this.children.push(child)\n\n    return child\n  }\n\n  attr(key, value) {\n    this.attrs[key] = value\n\n    return this\n  }\n\n  map(fn) {\n    return fn(this.tag, this.attrs, this.children.map(child => child.map(fn)))\n  }\n\n  toString() {\n    return this.map(\n      (tag, attrs, children) => {\n        attrs = Object.entries(attrs)\n          .map(([name, value]) => `${ name }=\"${ value }\"`)\n          .join(' ')\n        attrs    = attrs ? ' ' + attrs : ''\n        children = children.join('')\n\n        return `<${ tag }${ attrs }>${ children }</${ tag }>`\n      }\n    )\n  }\n\n  static textures(id, type, props) {\n    let d = new DOM()\n\n    Object.entries(props).reduce(\n      (t, [name, value]) =>\n        t[name] && typeof t[name] === 'function'\n          ? t[name](value)\n          : t,\n      textures[type]()\n    )(d)\n\n    d = d.children[0]\n\n    if (id != null)\n      d.children[0].attrs.id = id\n\n    return d\n  }\n}\n\nexport default ({ id, type, opacity = 1, ...props }) => {\n  const texture = DOM\n    .textures(id, type, props)\n    .children[0]\n\n  const width   = texture.attrs.width\n  const height  = texture.attrs.height\n  const viewBox = `0 0 ${ width } ${ height }`\n  const toUrl   = t => `url(\"data:image/svg+xml,${ encodeURI(t.toString()) }\")`\n\n  return toUrl(\n    new DOM(\n      'svg',\n      { width, height, viewBox, xmlns, opacity },\n      texture.children\n    )\n  )\n}\n","import Clip     from '../lib/clip'\nimport Textures from '../lib/textures'\n// import src      from '../assets/backtrack.ogg'\n\nconst src = 'http://www.universal-soundbank.com/sounds/7306.mp3' // brice\n// const src = 'http://www.universal-soundbank.com/sounds/1935.mp3' // bip ~1s\n// const src = 'http://www.universal-soundbank.com/sounds/988.mp3' // miaou ~2s\n\nexport const bpm = 180\n\nexport { src }\n\nexport const grid = {\n  repeat: true,\n  count: 2,\n  sections: [\n    {\n      name: 'Section 1 baby',\n      repeat: true,\n      count: 2,\n      lines: [\n        {\n          bars: [\n            { repeat: true, items: [\n              { duration: 4, chord: 'A' },\n              { duration: 1, chord: 'B' },\n              { duration: 2, chord: 'B' },\n              { duration: 2, chord: 'B' },\n            ] },\n            {                         items: [{ duration: 1, chord: 'D' }] },\n            {                         items: [{ duration: 1, chord: 'D' }] },\n            { repeat: true, count: 2, items: [{ duration: 1, chord: 'C' }] },\n            { repeat: true, count: 2, items: [{ duration: 1, chord: 'C' }] },\n            {               count: 2, items: [{ duration: 1, chord: 'D' }] },\n          ]\n        },\n        {\n          bars: [\n            { repeat: true          , items: [{ duration: 1, chord: 'A' }, { duration: 0.5, chord: 'B' }] },\n            { repeat: true, count: 2, items: [{ duration: 1, chord: 'C' }] },\n            {               count: 2, items: [{ duration: 0.5, chord: 'D' }] },\n          ]\n        },\n      ]\n    },\n    {\n      // name: 'Section 2 yeah',\n      lines: [\n        {\n          bars: [\n            { repeat: true          , items: [{ duration: 1, chord: 'A' }, { duration: 1, chord: 'B' }] },\n            { repeat: true, count: 2, items: [{ duration: 1, chord: 'C' }] },\n            {               count: 2, items: [{ duration: 1, chord: 'D' }] },\n          ]\n        },\n        {\n          bars: [\n            { repeat: true          , items: [{ duration: 1, chord: 'A' }, { duration: 1, chord: 'B' }] },\n            { repeat: true, count: 2, items: [{ duration: 1, chord: 'C' }, { duration: 0.5, chord: 'C' }] },\n            {               count: 2, items: [{ duration: 1, chord: 'D' }] },\n          ]\n        },\n      ]\n    },\n  ]\n}\n\nexport const timelines = [\n  {\n    repeat: true,\n    count: Infinity,\n    sections: [\n      {\n        lines: [\n          {\n            bars: [\n              { items: [{ duration: 1, events: [\n                { path: [0, 'layers', 1, 'scale'], value: 1 },\n                { path: [0, 'layers', 2, 'scale'], value: 2 },\n              ] }] },\n            ]\n          },\n        ]\n      },\n    ]\n  },\n  {\n    repeat: true,\n    count: Infinity,\n    sections: [\n      {\n        repeat: true,\n        count: 2,\n        lines: [\n          {\n            bars: [\n              { items: [{ duration: 1, events: [{ path: [0, 'layers', 1, 'root'], value: 'D' }] }] },\n              { items: [{ duration: 1, events: [{ path: [0, 'layers', 1, 'root'], value: 'E' }] }] },\n            ]\n          },\n        ]\n      },\n    ]\n  },\n  {\n    repeat: true,\n    count: Infinity,\n    sections: [\n      {\n        repeat: true,\n        count: 2,\n        lines: [\n          {\n            bars: [\n              { items: [{ duration: 1, events: [{ path: [0, 'layers', 2, 'root'], value: 'D' }] }] },\n              { items: [{ duration: 1, events: [{ path: [0, 'layers', 2, 'root'], value: 'E' }] }] },\n            ]\n          },\n        ]\n      },\n    ]\n  },\n]\n\nexport const instruments = [\n  {\n    type: 'guitar',\n    tuning: 1,\n    // type: 'piano',\n    // tuning: 0,\n    from  : 0,\n    to    : 12,\n    layers: [\n      {\n        palette: 1,\n        root   : 'C',\n        scale  : 0,\n      },\n      {\n        clips  : [0, 1, 2, 3],\n        masking: [{ mask: 0, offsetI: 0, offsetJ: 0 }],\n        palette: 0,\n        root   : 'C',\n        scale  : 0,\n      },\n      {\n        clips  : [4],\n        // masks  : [0],\n        palette: 0,\n        root   : 'C',\n        scale  : 0,\n      },\n    ],\n  },\n]\n\nconst intervals = [\n  '1', 'b2', '2', '#2', 'b3', '3', 'b4', '4',\n  '#4', 'b5', '5', '#5', 'b6', '6', 'bb7', 'b7', '7'\n]\n\nexport const tunings = [\n  ['C'],\n  ['E', 'A', 'D', 'G', 'B', 'E'],\n]\n\nexport const palettes = [\n  Object.fromEntries(\n    intervals.map(\n      (i, ind) =>\n        [i, {\n          backgroundImage: Textures({\n            type: ['lines', 'circles', 'paths'][ind % 3],\n            d: 'crosses',\n            stroke: `hsl(${ 360 * (ind + intervals.length / 2) / intervals.length }, 100%, 50%)`,\n            fill  : `hsl(${ 360 * (ind + intervals.length / 2) / intervals.length }, 100%, 50%)`,\n            lighter: true,\n            thicker: true,\n            opacity: .6,\n          }),\n          backgroundColor: `hsl(${ 360 * ind / intervals.length }, 50%, 50%)`,\n          borderRadius: ind % 3 === 0 ? '25%' : 0,\n          borderColor: '#EEE',\n          borderStyle: 'solid',\n          borderWidth: '1px',\n        }]\n    )\n  ),\n  Object.fromEntries(\n    intervals.map(i => [i, { backgroundColor: '#111', borderRadius: '25%' }])\n  ),\n]\n\nexport const scales = [\n  ['1', 'b2', '2', 'b3', '3', '4', '#4', '5', 'b6', '6', 'b7', '7'],\n  ['1', '2', '3', '4', '5', '6', '7'],\n  ['1', '2', 'b3', '4', '5', 'b6', 'b7'],\n]\n\nexport const clips = [\n  Clip.topLeft    (.5),\n  Clip.topRight   (.5),\n  Clip.bottomLeft (.5),\n  Clip.bottomRight(.5),\n  Clip.diamond    (.5),\n]\n\nexport const masks = [\n  [\n    [[-Infinity, 8], [8, Infinity]],\n    [[-Infinity, 8], [8, Infinity]],\n    [[-Infinity, 8], [8, Infinity]],\n    [[-Infinity, 8], [8, Infinity]],\n    [[-Infinity, 8], [8, Infinity]],\n    [[-Infinity, 8], [8, Infinity]],\n  ]\n]\n","import { createStore } from 'redux'\nimport reducer         from './reducer'\nimport {\n  bpm,\n  grid,\n  timelines,\n  instruments,\n  masks,\n\n  src,\n  tunings,\n  palettes,\n  scales,\n  clips,\n} from './data'\nimport {\n  itWorks,\n} from './itworks'\nimport { getIndex, group, groupsIterator } from '../lib/grid'\n\n// const { bpm, grid, timelines, instruments, masks } = itWorks()\nconst groups   = [grid, ...timelines].map(group)\n// const groups    = [grid].map(group)\nconst gridGroup = groups[0]\nconst iterator  = groupsIterator(groups)\nconst index     = getIndex(grid, gridGroup)(iterator.cursor()[0])\nconst next      = iterator.next()\n\nwindow.it = iterator\n\nconst initial = {\n  bpm,\n  src,\n  grid,\n  gridGroup,\n  iterator,\n  next,\n  index,\n  initialInstruments: instruments,\n  instruments,\n  tunings,\n  clips,\n  masks,\n  palettes,\n  scales,\n}\n\nconst store = createStore(\n  reducer,\n  initial,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nwindow.store   = store\nwindow.initial = initial\nexport default store\n","import React                 from 'react'\nimport ReactDOM              from 'react-dom'\nimport { Provider }          from 'react-redux'\nimport registerServiceWorker from './registerServiceWorker'\n\nimport            './polyfills'\nimport App   from './components/App'\nimport store from './store/'\nimport './styles.scss'\n\n/* setTimeout(() => { */\n  ReactDOM.render((\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  ),\n    document.getElementById('root'))\n  registerServiceWorker()\n  /* }, 100) */\n"],"sourceRoot":""}